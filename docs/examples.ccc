
### Hello World ###
int main() {
    printString("Hello World\n");
    return 0;
}



### Funkcje i konkatenacja stringów ###

string f(string s) {
    return s + s;
}

int main() {
    string s = f("Hello ");
    printString(s);
    return 0;
}



### Krotki ###

tuple make_tuple(int x, int y) {
    return (x, y);
}

int main() {
    int a, b;
    (a, b) = make_tuple(x);
    printTuple((b, a));
    return 0;
}



### Tablice ### 

int main() {
    int t[3];
    t[1] = 1;
    t[2] = 2;
    printInt(t[2]);
    return 0;
}



### Funkcje zagnieżdżone ### 

int main() {
    int printHelloWorld() {
        printString("Hello World");
    };
    printHelloWorld();
    return 0;
}



### Funkcje wyższego rzędu, lambdy, referencja ###

void applyToString(string &s, function<string(string)> f) {
    s = f(s);
}

int main() {
    string s = "hello ";
    applyToString(s, (str) -> { 
        return str+str+str;
    });
    printString(s);
    return 0;
}



### Funkcje wyższego rzędu, inny przykład ###

int apply(int x, function<int(int)> f) {
    return f(x);
}

int main() {

    int f(int x) {
        return (x - 50) * (x - 50) + 7 * x;
    };

    int maks = 0;

    int i = 0;
    while (i <= 100) {
        if (maks > apply(x, f)) {
            maks = apply(x, f);
        }
    }

    printInt(maks);
}

