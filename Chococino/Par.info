-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Chococino/Par.y
-----------------------------------------------------------------------------

state 34 contains 1 shift/reduce conflicts and 14 reduce/reduce conflicts.
state 44 contains 3 shift/reduce conflicts.
state 45 contains 2 shift/reduce conflicts.
state 46 contains 7 shift/reduce conflicts.
state 47 contains 1 shift/reduce conflicts.
state 48 contains 1 shift/reduce conflicts.
state 56 contains 1 reduce/reduce conflicts.
state 71 contains 1 shift/reduce conflicts and 37 reduce/reduce conflicts.
state 72 contains 1 shift/reduce conflicts.
state 73 contains 1 reduce/reduce conflicts.
state 76 contains 38 reduce/reduce conflicts.
state 78 contains 15 reduce/reduce conflicts.
state 80 contains 1 shift/reduce conflicts.
state 81 contains 1 shift/reduce conflicts.
state 83 contains 2 shift/reduce conflicts.
state 88 contains 1 shift/reduce conflicts.
state 89 contains 1 reduce/reduce conflicts.
state 90 contains 38 reduce/reduce conflicts.
state 120 contains 1 shift/reduce conflicts.
state 121 contains 1 shift/reduce conflicts.
state 124 contains 1 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 130 contains 38 reduce/reduce conflicts.
state 131 contains 3 shift/reduce conflicts and 35 reduce/reduce conflicts.
state 132 contains 1 shift/reduce conflicts and 37 reduce/reduce conflicts.
state 133 contains 2 shift/reduce conflicts and 36 reduce/reduce conflicts.
state 134 contains 38 reduce/reduce conflicts.
state 135 contains 23 reduce/reduce conflicts.
state 136 contains 1 shift/reduce conflicts.
state 149 contains 1 shift/reduce conflicts.
state 150 contains 1 reduce/reduce conflicts.
state 152 contains 1 shift/reduce conflicts.
state 155 contains 1 shift/reduce conflicts.
state 160 contains 1 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 166 contains 1 shift/reduce conflicts.
state 167 contains 2 reduce/reduce conflicts.
state 180 contains 1 shift/reduce conflicts.
state 183 contains 23 reduce/reduce conflicts.

rule 21 is unused
rule 22 is unused
rule 35 is unused
rule 47 is unused
rule 57 is unused
rule 58 is unused
rule 60 is unused
rule 62 is unused
rule 64 is unused
rule 66 is unused
rule 68 is unused
rule 71 is unused
rule 97 is unused
rule 98 is unused
rule 99 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg -> Type Ident                                  (8)
	Arg -> Type '&' Ident                              (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	Block -> '{' ListStmt '}'                          (13)
	ListStmt ->                                        (14)
	ListStmt -> Stmt ListStmt                          (15)
	Stmt -> ';'                                        (16)
	Stmt -> Block                                      (17)
	Stmt -> Type ListItem ';'                          (18)
	Stmt -> Type Ident '[' Expr ']'                    (19)
	Stmt -> Ident '=' Expr ';'                         (20)
	Stmt -> Ident '[' Expr ']' '=' Expr                (21)
	Stmt -> TupL '=' TupR                              (22)
	Stmt -> Ident '++' ';'                             (23)
	Stmt -> Ident '--' ';'                             (24)
	Stmt -> 'return' Expr ';'                          (25)
	Stmt -> 'return' ';'                               (26)
	Stmt -> 'if' '(' Expr ')' Stmt                     (27)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (28)
	Stmt -> 'while' '(' Expr ')' Stmt                  (29)
	Stmt -> Expr ';'                                   (30)
	Stmt -> 'break'                                    (31)
	Stmt -> 'continue'                                 (32)
	Stmt -> TopDef ';'                                 (33)
	Item -> Ident                                      (34)
	Item -> Ident '=' Expr                             (35)
	ListItem -> Item                                   (36)
	ListItem -> Item ',' ListItem                      (37)
	Type -> 'int'                                      (38)
	Type -> 'string'                                   (39)
	Type -> 'boolean'                                  (40)
	Type -> 'void'                                     (41)
	Type -> 'tuple'                                    (42)
	Type -> 'function' '<' Type '(' ListType ')' '>'   (43)
	ListType ->                                        (44)
	ListType -> Type                                   (45)
	ListType -> Type ',' ListType                      (46)
	Expr6 -> Ident                                     (47)
	Expr6 -> Integer                                   (48)
	Expr6 -> TupR                                      (49)
	Expr6 -> Lambda                                    (50)
	Expr6 -> 'true'                                    (51)
	Expr6 -> 'false'                                   (52)
	Expr6 -> Ident '(' ListExpr ')'                    (53)
	Expr6 -> String                                    (54)
	Expr6 -> Ident '[' Expr ']'                        (55)
	Expr6 -> '(' Expr ')'                              (56)
	Expr5 -> '-' Expr6                                 (57)
	Expr5 -> '!' Expr6                                 (58)
	Expr5 -> Expr6                                     (59)
	Expr4 -> Expr4 MulOp Expr5                         (60)
	Expr4 -> Expr5                                     (61)
	Expr3 -> Expr3 AddOp Expr4                         (62)
	Expr3 -> Expr4                                     (63)
	Expr2 -> Expr2 RelOp Expr3                         (64)
	Expr2 -> Expr3                                     (65)
	Expr1 -> Expr2 '&&' Expr1                          (66)
	Expr1 -> Expr2                                     (67)
	Expr -> Expr1 '||' Expr                            (68)
	Expr -> Expr1                                      (69)
	ListExpr ->                                        (70)
	ListExpr -> Expr                                   (71)
	ListExpr -> Expr ',' ListExpr                      (72)
	TupL -> Ident                                      (73)
	TupL -> '(' ListTupL ')'                           (74)
	TupL -> TupL1                                      (75)
	TupL1 -> '(' TupL ')'                              (76)
	ListTupL ->                                        (77)
	ListTupL -> TupL                                   (78)
	ListTupL -> TupL ',' ListTupL                      (79)
	TupR -> Expr                                       (80)
	TupR -> '(' ListTupR ')'                           (81)
	TupR -> TupR1                                      (82)
	TupR1 -> '(' TupR ')'                              (83)
	ListTupR ->                                        (84)
	ListTupR -> TupR                                   (85)
	ListTupR -> TupR ',' ListTupR                      (86)
	LArg -> Type Ident                                 (87)
	LArg -> LArg1                                      (88)
	LArg1 -> '(' LArg ')'                              (89)
	ListLArg ->                                        (90)
	ListLArg -> LArg                                   (91)
	ListLArg -> LArg ',' ListLArg                      (92)
	Lambda -> Ident                                    (93)
	Lambda -> '(' ListLArg ')' '->' Block              (94)
	Lambda -> Lambda1                                  (95)
	Lambda1 -> '(' Lambda ')'                          (96)
	ListLambda ->                                      (97)
	ListLambda -> Lambda                               (98)
	ListLambda -> Lambda ',' ListLambda                (99)
	AddOp -> '+'                                       (100)
	AddOp -> '-'                                       (101)
	MulOp -> '*'                                       (102)
	MulOp -> '/'                                       (103)
	MulOp -> '%'                                       (104)
	RelOp -> '<'                                       (105)
	RelOp -> '<='                                      (106)
	RelOp -> '>'                                       (107)
	RelOp -> '>='                                      (108)
	RelOp -> '=='                                      (109)
	RelOp -> '!='                                      (110)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'->'           { PT _ (TS _ 14) }
	'/'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	']'            { PT _ (TS _ 24) }
	'boolean'      { PT _ (TS _ 25) }
	'break'        { PT _ (TS _ 26) }
	'continue'     { PT _ (TS _ 27) }
	'else'         { PT _ (TS _ 28) }
	'false'        { PT _ (TS _ 29) }
	'function'     { PT _ (TS _ 30) }
	'if'           { PT _ (TS _ 31) }
	'int'          { PT _ (TS _ 32) }
	'return'       { PT _ (TS _ 33) }
	'string'       { PT _ (TS _ 34) }
	'true'         { PT _ (TS _ 35) }
	'tuple'        { PT _ (TS _ 36) }
	'void'         { PT _ (TS _ 37) }
	'while'        { PT _ (TS _ 38) }
	'{'            { PT _ (TS _ 39) }
	'||'           { PT _ (TS _ 40) }
	'}'            { PT _ (TS _ 41) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg             rules 8, 9
	ListArg         rules 10, 11, 12
	Block           rule  13
	ListStmt        rules 14, 15
	Stmt            rules 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
	Item            rules 34, 35
	ListItem        rules 36, 37
	Type            rules 38, 39, 40, 41, 42, 43
	ListType        rules 44, 45, 46
	Expr6           rules 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
	Expr5           rules 57, 58, 59
	Expr4           rules 60, 61
	Expr3           rules 62, 63
	Expr2           rules 64, 65
	Expr1           rules 66, 67
	Expr            rules 68, 69
	ListExpr        rules 70, 71, 72
	TupL            rules 73, 74, 75
	TupL1           rule  76
	ListTupL        rules 77, 78, 79
	TupR            rules 80, 81, 82
	TupR1           rule  83
	ListTupR        rules 84, 85, 86
	LArg            rules 87, 88
	LArg1           rule  89
	ListLArg        rules 90, 91, 92
	Lambda          rules 93, 94, 95
	Lambda1         rule  96
	ListLambda      rules 97, 98, 99
	AddOp           rules 100, 101
	MulOp           rules 102, 103, 104
	RelOp           rules 105, 106, 107, 108, 109, 110

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!'            reduce using rule 1
	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'boolean'      reduce using rule 1
	'break'        reduce using rule 1
	'continue'     reduce using rule 1
	'else'         reduce using rule 1
	'false'        reduce using rule 1
	'function'     reduce using rule 1
	'if'           reduce using rule 1
	'int'          reduce using rule 1
	'return'       reduce using rule 1
	'string'       reduce using rule 1
	'true'         reduce using rule 1
	'tuple'        reduce using rule 1
	'void'         reduce using rule 1
	'while'        reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	'}'            reduce using rule 1
	L_Ident        reduce using rule 1
	L_integ        reduce using rule 1
	L_quoted       reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 15
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 14

State 7

	Type -> 'boolean' .                                 (rule 40)

	'&'            reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	','            reduce using rule 40
	L_Ident        reduce using rule 40


State 8

	Type -> 'function' . '<' Type '(' ListType ')' '>'    (rule 43)

	'<'            shift, and enter state 13


State 9

	Type -> 'int' .                                     (rule 38)

	'&'            reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	','            reduce using rule 38
	L_Ident        reduce using rule 38


State 10

	Type -> 'string' .                                  (rule 39)

	'&'            reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	','            reduce using rule 39
	L_Ident        reduce using rule 39


State 11

	Type -> 'tuple' .                                   (rule 42)

	'&'            reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	','            reduce using rule 42
	L_Ident        reduce using rule 42


State 12

	Type -> 'void' .                                    (rule 41)

	'&'            reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	','            reduce using rule 41
	L_Ident        reduce using rule 41


State 13

	Type -> 'function' '<' . Type '(' ListType ')' '>'    (rule 43)

	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12

	Type           goto state 17

State 14

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 16


State 15

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 16

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12

	Arg            goto state 19
	ListArg        goto state 20
	Type           goto state 21

State 17

	Type -> 'function' '<' Type . '(' ListType ')' '>'    (rule 43)

	'('            shift, and enter state 18


State 18

	Type -> 'function' '<' Type '(' . ListType ')' '>'    (rule 43)

	')'            reduce using rule 44
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12

	Type           goto state 26
	ListType       goto state 27

State 19

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 25


State 20

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 24


State 21

	Arg -> Type . Ident                                 (rule 8)
	Arg -> Type . '&' Ident                             (rule 9)

	'&'            shift, and enter state 23
	L_Ident        shift, and enter state 2

	Ident          goto state 22

State 22

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 23

	Arg -> Type '&' . Ident                             (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 33

State 24

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 32

	Block          goto state 31

State 25

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12

	Arg            goto state 19
	ListArg        goto state 30
	Type           goto state 21

State 26

	ListType -> Type .                                  (rule 45)
	ListType -> Type . ',' ListType                     (rule 46)

	')'            reduce using rule 45
	','            shift, and enter state 29


State 27

	Type -> 'function' '<' Type '(' ListType . ')' '>'    (rule 43)

	')'            shift, and enter state 28


State 28

	Type -> 'function' '<' Type '(' ListType ')' . '>'    (rule 43)

	'>'            shift, and enter state 69


State 29

	ListType -> Type ',' . ListType                     (rule 46)

	')'            reduce using rule 44
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12

	Type           goto state 26
	ListType       goto state 68

State 30

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 31

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	';'            reduce using rule 5
	'boolean'      reduce using rule 5
	'function'     reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'tuple'        reduce using rule 5
	'void'         reduce using rule 5
	%eof           reduce using rule 5


State 32

	Block -> '{' . ListStmt '}'                         (rule 13)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	';'            shift, and enter state 58
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 59
	'continue'     shift, and enter state 60
	'false'        shift, and enter state 61
	'function'     shift, and enter state 8
	'if'           shift, and enter state 62
	'int'          shift, and enter state 9
	'return'       shift, and enter state 63
	'string'       shift, and enter state 10
	'true'         shift, and enter state 64
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12
	'while'        shift, and enter state 65
	'{'            shift, and enter state 32
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 34
	Integer        goto state 35
	String         goto state 36
	TopDef         goto state 37
	Block          goto state 38
	ListStmt       goto state 39
	Stmt           goto state 40
	Type           goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 48
	TupL           goto state 49
	TupL1          goto state 50
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 33

	Arg -> Type '&' Ident .                             (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 34

	Stmt -> Ident . '=' Expr ';'                        (rule 20)
	Stmt -> Ident . '[' Expr ']' '=' Expr               (rule 21)
	Stmt -> Ident . '++' ';'                            (rule 23)
	Stmt -> Ident . '--' ';'                            (rule 24)
	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 53)
	Expr6 -> Ident . '[' Expr ']'                       (rule 55)
	TupL -> Ident .                                     (rule 73)
	Lambda -> Ident .                                   (rule 93)

	'!='           reduce using rule 93
			(reduce using rule 47)

	'%'            reduce using rule 93
			(reduce using rule 47)

	'&&'           reduce using rule 93
			(reduce using rule 47)

	'('            shift, and enter state 115
	'*'            reduce using rule 93
			(reduce using rule 47)

	'+'            reduce using rule 93
			(reduce using rule 47)

	'++'           shift, and enter state 116
	'-'            reduce using rule 93
			(reduce using rule 47)

	'--'           shift, and enter state 117
	'/'            reduce using rule 93
			(reduce using rule 47)

	';'            reduce using rule 93
			(reduce using rule 47)

	'<'            reduce using rule 93
			(reduce using rule 47)

	'<='           reduce using rule 93
			(reduce using rule 47)

	'='            shift, and enter state 118
			(reduce using rule 73)

	'=='           reduce using rule 93
			(reduce using rule 47)

	'>'            reduce using rule 93
			(reduce using rule 47)

	'>='           reduce using rule 93
			(reduce using rule 47)

	'['            shift, and enter state 119
	'||'           reduce using rule 93
			(reduce using rule 47)



State 35

	Expr6 -> Integer .                                  (rule 48)

	'!'            reduce using rule 48
	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	']'            reduce using rule 48
	'boolean'      reduce using rule 48
	'break'        reduce using rule 48
	'continue'     reduce using rule 48
	'else'         reduce using rule 48
	'false'        reduce using rule 48
	'function'     reduce using rule 48
	'if'           reduce using rule 48
	'int'          reduce using rule 48
	'return'       reduce using rule 48
	'string'       reduce using rule 48
	'true'         reduce using rule 48
	'tuple'        reduce using rule 48
	'void'         reduce using rule 48
	'while'        reduce using rule 48
	'{'            reduce using rule 48
	'||'           reduce using rule 48
	'}'            reduce using rule 48
	L_Ident        reduce using rule 48
	L_integ        reduce using rule 48
	L_quoted       reduce using rule 48


State 36

	Expr6 -> String .                                   (rule 54)

	'!'            reduce using rule 54
	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'boolean'      reduce using rule 54
	'break'        reduce using rule 54
	'continue'     reduce using rule 54
	'else'         reduce using rule 54
	'false'        reduce using rule 54
	'function'     reduce using rule 54
	'if'           reduce using rule 54
	'int'          reduce using rule 54
	'return'       reduce using rule 54
	'string'       reduce using rule 54
	'true'         reduce using rule 54
	'tuple'        reduce using rule 54
	'void'         reduce using rule 54
	'while'        reduce using rule 54
	'{'            reduce using rule 54
	'||'           reduce using rule 54
	'}'            reduce using rule 54
	L_Ident        reduce using rule 54
	L_integ        reduce using rule 54
	L_quoted       reduce using rule 54


State 37

	Stmt -> TopDef . ';'                                (rule 33)

	';'            shift, and enter state 114


State 38

	Stmt -> Block .                                     (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'function'     reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'tuple'        reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 39

	Block -> '{' ListStmt . '}'                         (rule 13)

	'}'            shift, and enter state 113


State 40

	ListStmt -> Stmt . ListStmt                         (rule 15)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	';'            shift, and enter state 58
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 59
	'continue'     shift, and enter state 60
	'false'        shift, and enter state 61
	'function'     shift, and enter state 8
	'if'           shift, and enter state 62
	'int'          shift, and enter state 9
	'return'       shift, and enter state 63
	'string'       shift, and enter state 10
	'true'         shift, and enter state 64
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12
	'while'        shift, and enter state 65
	'{'            shift, and enter state 32
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 34
	Integer        goto state 35
	String         goto state 36
	TopDef         goto state 37
	Block          goto state 38
	ListStmt       goto state 112
	Stmt           goto state 40
	Type           goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 48
	TupL           goto state 49
	TupL1          goto state 50
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 41

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	Stmt -> Type . ListItem ';'                         (rule 18)
	Stmt -> Type . Ident '[' Expr ']'                   (rule 19)

	L_Ident        shift, and enter state 2

	Ident          goto state 109
	Item           goto state 110
	ListItem       goto state 111

State 42

	Expr5 -> Expr6 .                                    (rule 59)

	'!'            reduce using rule 59
	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'boolean'      reduce using rule 59
	'break'        reduce using rule 59
	'continue'     reduce using rule 59
	'else'         reduce using rule 59
	'false'        reduce using rule 59
	'function'     reduce using rule 59
	'if'           reduce using rule 59
	'int'          reduce using rule 59
	'return'       reduce using rule 59
	'string'       reduce using rule 59
	'true'         reduce using rule 59
	'tuple'        reduce using rule 59
	'void'         reduce using rule 59
	'while'        reduce using rule 59
	'{'            reduce using rule 59
	'||'           reduce using rule 59
	'}'            reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59


State 43

	Expr4 -> Expr5 .                                    (rule 61)

	'!'            reduce using rule 61
	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'boolean'      reduce using rule 61
	'break'        reduce using rule 61
	'continue'     reduce using rule 61
	'else'         reduce using rule 61
	'false'        reduce using rule 61
	'function'     reduce using rule 61
	'if'           reduce using rule 61
	'int'          reduce using rule 61
	'return'       reduce using rule 61
	'string'       reduce using rule 61
	'true'         reduce using rule 61
	'tuple'        reduce using rule 61
	'void'         reduce using rule 61
	'while'        reduce using rule 61
	'{'            reduce using rule 61
	'||'           reduce using rule 61
	'}'            reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 44

	Expr4 -> Expr4 . MulOp Expr5                        (rule 60)
	Expr3 -> Expr4 .                                    (rule 63)

	'!'            reduce using rule 63
	'!='           reduce using rule 63
	'%'            shift, and enter state 106
			(reduce using rule 63)

	'&&'           reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	'*'            shift, and enter state 107
			(reduce using rule 63)

	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            shift, and enter state 108
			(reduce using rule 63)

	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'boolean'      reduce using rule 63
	'break'        reduce using rule 63
	'continue'     reduce using rule 63
	'else'         reduce using rule 63
	'false'        reduce using rule 63
	'function'     reduce using rule 63
	'if'           reduce using rule 63
	'int'          reduce using rule 63
	'return'       reduce using rule 63
	'string'       reduce using rule 63
	'true'         reduce using rule 63
	'tuple'        reduce using rule 63
	'void'         reduce using rule 63
	'while'        reduce using rule 63
	'{'            reduce using rule 63
	'||'           reduce using rule 63
	'}'            reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63

	MulOp          goto state 105

State 45

	Expr3 -> Expr3 . AddOp Expr4                        (rule 62)
	Expr2 -> Expr3 .                                    (rule 65)

	'!'            reduce using rule 65
	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            shift, and enter state 103
			(reduce using rule 65)

	','            reduce using rule 65
	'-'            shift, and enter state 104
			(reduce using rule 65)

	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'boolean'      reduce using rule 65
	'break'        reduce using rule 65
	'continue'     reduce using rule 65
	'else'         reduce using rule 65
	'false'        reduce using rule 65
	'function'     reduce using rule 65
	'if'           reduce using rule 65
	'int'          reduce using rule 65
	'return'       reduce using rule 65
	'string'       reduce using rule 65
	'true'         reduce using rule 65
	'tuple'        reduce using rule 65
	'void'         reduce using rule 65
	'while'        reduce using rule 65
	'{'            reduce using rule 65
	'||'           reduce using rule 65
	'}'            reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65

	AddOp          goto state 102

State 46

	Expr2 -> Expr2 . RelOp Expr3                        (rule 64)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 66)
	Expr1 -> Expr2 .                                    (rule 67)

	'!'            reduce using rule 67
	'!='           shift, and enter state 95
			(reduce using rule 67)

	'%'            reduce using rule 67
	'&&'           shift, and enter state 96
			(reduce using rule 67)

	'('            reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            shift, and enter state 97
			(reduce using rule 67)

	'<='           shift, and enter state 98
			(reduce using rule 67)

	'=='           shift, and enter state 99
			(reduce using rule 67)

	'>'            shift, and enter state 100
			(reduce using rule 67)

	'>='           shift, and enter state 101
			(reduce using rule 67)

	']'            reduce using rule 67
	'boolean'      reduce using rule 67
	'break'        reduce using rule 67
	'continue'     reduce using rule 67
	'else'         reduce using rule 67
	'false'        reduce using rule 67
	'function'     reduce using rule 67
	'if'           reduce using rule 67
	'int'          reduce using rule 67
	'return'       reduce using rule 67
	'string'       reduce using rule 67
	'true'         reduce using rule 67
	'tuple'        reduce using rule 67
	'void'         reduce using rule 67
	'while'        reduce using rule 67
	'{'            reduce using rule 67
	'||'           reduce using rule 67
	'}'            reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67

	RelOp          goto state 94

State 47

	Expr -> Expr1 . '||' Expr                           (rule 68)
	Expr -> Expr1 .                                     (rule 69)

	'!'            reduce using rule 69
	'!='           reduce using rule 69
	'%'            reduce using rule 69
	'&&'           reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'boolean'      reduce using rule 69
	'break'        reduce using rule 69
	'continue'     reduce using rule 69
	'else'         reduce using rule 69
	'false'        reduce using rule 69
	'function'     reduce using rule 69
	'if'           reduce using rule 69
	'int'          reduce using rule 69
	'return'       reduce using rule 69
	'string'       reduce using rule 69
	'true'         reduce using rule 69
	'tuple'        reduce using rule 69
	'void'         reduce using rule 69
	'while'        reduce using rule 69
	'{'            reduce using rule 69
	'||'           shift, and enter state 93
			(reduce using rule 69)

	'}'            reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 48

	Stmt -> Expr . ';'                                  (rule 30)
	TupR -> Expr .                                      (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'/'            reduce using rule 80
	';'            shift, and enter state 92
			(reduce using rule 80)

	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'||'           reduce using rule 80


State 49

	Stmt -> TupL . '=' TupR                             (rule 22)

	'='            shift, and enter state 91


State 50

	TupL -> TupL1 .                                     (rule 75)

	')'            reduce using rule 75
	','            reduce using rule 75
	'='            reduce using rule 75


State 51

	Expr6 -> TupR .                                     (rule 49)

	'!'            reduce using rule 49
	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'boolean'      reduce using rule 49
	'break'        reduce using rule 49
	'continue'     reduce using rule 49
	'else'         reduce using rule 49
	'false'        reduce using rule 49
	'function'     reduce using rule 49
	'if'           reduce using rule 49
	'int'          reduce using rule 49
	'return'       reduce using rule 49
	'string'       reduce using rule 49
	'true'         reduce using rule 49
	'tuple'        reduce using rule 49
	'void'         reduce using rule 49
	'while'        reduce using rule 49
	'{'            reduce using rule 49
	'||'           reduce using rule 49
	'}'            reduce using rule 49
	L_Ident        reduce using rule 49
	L_integ        reduce using rule 49
	L_quoted       reduce using rule 49


State 52

	TupR -> TupR1 .                                     (rule 82)

	'!'            reduce using rule 82
	'!='           reduce using rule 82
	'%'            reduce using rule 82
	'&&'           reduce using rule 82
	'('            reduce using rule 82
	')'            reduce using rule 82
	'*'            reduce using rule 82
	'+'            reduce using rule 82
	','            reduce using rule 82
	'-'            reduce using rule 82
	'/'            reduce using rule 82
	';'            reduce using rule 82
	'<'            reduce using rule 82
	'<='           reduce using rule 82
	'=='           reduce using rule 82
	'>'            reduce using rule 82
	'>='           reduce using rule 82
	']'            reduce using rule 82
	'boolean'      reduce using rule 82
	'break'        reduce using rule 82
	'continue'     reduce using rule 82
	'else'         reduce using rule 82
	'false'        reduce using rule 82
	'function'     reduce using rule 82
	'if'           reduce using rule 82
	'int'          reduce using rule 82
	'return'       reduce using rule 82
	'string'       reduce using rule 82
	'true'         reduce using rule 82
	'tuple'        reduce using rule 82
	'void'         reduce using rule 82
	'while'        reduce using rule 82
	'{'            reduce using rule 82
	'||'           reduce using rule 82
	'}'            reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 53

	Expr6 -> Lambda .                                   (rule 50)

	'!'            reduce using rule 50
	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'boolean'      reduce using rule 50
	'break'        reduce using rule 50
	'continue'     reduce using rule 50
	'else'         reduce using rule 50
	'false'        reduce using rule 50
	'function'     reduce using rule 50
	'if'           reduce using rule 50
	'int'          reduce using rule 50
	'return'       reduce using rule 50
	'string'       reduce using rule 50
	'true'         reduce using rule 50
	'tuple'        reduce using rule 50
	'void'         reduce using rule 50
	'while'        reduce using rule 50
	'{'            reduce using rule 50
	'||'           reduce using rule 50
	'}'            reduce using rule 50
	L_Ident        reduce using rule 50
	L_integ        reduce using rule 50
	L_quoted       reduce using rule 50


State 54

	Lambda -> Lambda1 .                                 (rule 95)

	'!'            reduce using rule 95
	'!='           reduce using rule 95
	'%'            reduce using rule 95
	'&&'           reduce using rule 95
	'('            reduce using rule 95
	')'            reduce using rule 95
	'*'            reduce using rule 95
	'+'            reduce using rule 95
	','            reduce using rule 95
	'-'            reduce using rule 95
	'/'            reduce using rule 95
	';'            reduce using rule 95
	'<'            reduce using rule 95
	'<='           reduce using rule 95
	'=='           reduce using rule 95
	'>'            reduce using rule 95
	'>='           reduce using rule 95
	']'            reduce using rule 95
	'boolean'      reduce using rule 95
	'break'        reduce using rule 95
	'continue'     reduce using rule 95
	'else'         reduce using rule 95
	'false'        reduce using rule 95
	'function'     reduce using rule 95
	'if'           reduce using rule 95
	'int'          reduce using rule 95
	'return'       reduce using rule 95
	'string'       reduce using rule 95
	'true'         reduce using rule 95
	'tuple'        reduce using rule 95
	'void'         reduce using rule 95
	'while'        reduce using rule 95
	'{'            reduce using rule 95
	'||'           reduce using rule 95
	'}'            reduce using rule 95
	L_Ident        reduce using rule 95
	L_integ        reduce using rule 95
	L_quoted       reduce using rule 95


State 55

	Expr5 -> '!' . Expr6                                (rule 58)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 90
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 77
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 56

	Expr6 -> '(' . Expr ')'                             (rule 56)
	TupL -> '(' . ListTupL ')'                          (rule 74)
	TupL1 -> '(' . TupL ')'                             (rule 76)
	TupR -> '(' . ListTupR ')'                          (rule 81)
	TupR1 -> '(' . TupR ')'                             (rule 83)
	Lambda -> '(' . ListLArg ')' '->' Block             (rule 94)
	Lambda1 -> '(' . Lambda ')'                         (rule 96)

	'!'            shift, and enter state 55
	'('            shift, and enter state 89
	')'            reduce using rule 90
			(reduce using rule 84)
			(reduce using rule 77)

	'-'            shift, and enter state 57
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 61
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'true'         shift, and enter state 64
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 78
	Integer        goto state 35
	String         goto state 36
	Type           goto state 79
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 80
	TupL           goto state 81
	TupL1          goto state 50
	ListTupL       goto state 82
	TupR           goto state 83
	TupR1          goto state 52
	ListTupR       goto state 84
	LArg           goto state 85
	LArg1          goto state 86
	ListLArg       goto state 87
	Lambda         goto state 88
	Lambda1        goto state 54

State 57

	Expr5 -> '-' . Expr6                                (rule 57)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 76
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 77
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 58

	Stmt -> ';' .                                       (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'function'     reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'tuple'        reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 59

	Stmt -> 'break' .                                   (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'function'     reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'tuple'        reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 60

	Stmt -> 'continue' .                                (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'function'     reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'tuple'        reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 61

	Expr6 -> 'false' .                                  (rule 52)

	'!'            reduce using rule 52
	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'boolean'      reduce using rule 52
	'break'        reduce using rule 52
	'continue'     reduce using rule 52
	'else'         reduce using rule 52
	'false'        reduce using rule 52
	'function'     reduce using rule 52
	'if'           reduce using rule 52
	'int'          reduce using rule 52
	'return'       reduce using rule 52
	'string'       reduce using rule 52
	'true'         reduce using rule 52
	'tuple'        reduce using rule 52
	'void'         reduce using rule 52
	'while'        reduce using rule 52
	'{'            reduce using rule 52
	'||'           reduce using rule 52
	'}'            reduce using rule 52
	L_Ident        reduce using rule 52
	L_integ        reduce using rule 52
	L_quoted       reduce using rule 52


State 62

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 27)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 28)

	'('            shift, and enter state 75


State 63

	Stmt -> 'return' . Expr ';'                         (rule 25)
	Stmt -> 'return' . ';'                              (rule 26)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	';'            shift, and enter state 74
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 72
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 64

	Expr6 -> 'true' .                                   (rule 51)

	'!'            reduce using rule 51
	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'boolean'      reduce using rule 51
	'break'        reduce using rule 51
	'continue'     reduce using rule 51
	'else'         reduce using rule 51
	'false'        reduce using rule 51
	'function'     reduce using rule 51
	'if'           reduce using rule 51
	'int'          reduce using rule 51
	'return'       reduce using rule 51
	'string'       reduce using rule 51
	'true'         reduce using rule 51
	'tuple'        reduce using rule 51
	'void'         reduce using rule 51
	'while'        reduce using rule 51
	'{'            reduce using rule 51
	'||'           reduce using rule 51
	'}'            reduce using rule 51
	L_Ident        reduce using rule 51
	L_integ        reduce using rule 51
	L_quoted       reduce using rule 51


State 65

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 29)

	'('            shift, and enter state 70


State 66

	Integer -> L_integ .                                (rule 2)

	'!'            reduce using rule 2
	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'boolean'      reduce using rule 2
	'break'        reduce using rule 2
	'continue'     reduce using rule 2
	'else'         reduce using rule 2
	'false'        reduce using rule 2
	'function'     reduce using rule 2
	'if'           reduce using rule 2
	'int'          reduce using rule 2
	'return'       reduce using rule 2
	'string'       reduce using rule 2
	'true'         reduce using rule 2
	'tuple'        reduce using rule 2
	'void'         reduce using rule 2
	'while'        reduce using rule 2
	'{'            reduce using rule 2
	'||'           reduce using rule 2
	'}'            reduce using rule 2
	L_Ident        reduce using rule 2
	L_integ        reduce using rule 2
	L_quoted       reduce using rule 2


State 67

	String -> L_quoted .                                (rule 3)

	'!'            reduce using rule 3
	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'boolean'      reduce using rule 3
	'break'        reduce using rule 3
	'continue'     reduce using rule 3
	'else'         reduce using rule 3
	'false'        reduce using rule 3
	'function'     reduce using rule 3
	'if'           reduce using rule 3
	'int'          reduce using rule 3
	'return'       reduce using rule 3
	'string'       reduce using rule 3
	'true'         reduce using rule 3
	'tuple'        reduce using rule 3
	'void'         reduce using rule 3
	'while'        reduce using rule 3
	'{'            reduce using rule 3
	'||'           reduce using rule 3
	'}'            reduce using rule 3
	L_Ident        reduce using rule 3
	L_integ        reduce using rule 3
	L_quoted       reduce using rule 3


State 68

	ListType -> Type ',' ListType .                     (rule 46)

	')'            reduce using rule 46


State 69

	Type -> 'function' '<' Type '(' ListType ')' '>' .    (rule 43)

	'&'            reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	','            reduce using rule 43
	L_Ident        reduce using rule 43


State 70

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 29)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 152
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 71

	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 53)
	Expr6 -> Ident . '[' Expr ']'                       (rule 55)
	Lambda -> Ident .                                   (rule 93)

	'!'            reduce using rule 93
			(reduce using rule 47)

	'!='           reduce using rule 93
			(reduce using rule 47)

	'%'            reduce using rule 93
			(reduce using rule 47)

	'&&'           reduce using rule 93
			(reduce using rule 47)

	'('            shift, and enter state 115
			(reduce using rule 93)
			(reduce using rule 47)

	')'            reduce using rule 93
			(reduce using rule 47)

	'*'            reduce using rule 93
			(reduce using rule 47)

	'+'            reduce using rule 93
			(reduce using rule 47)

	','            reduce using rule 93
			(reduce using rule 47)

	'-'            reduce using rule 93
			(reduce using rule 47)

	'/'            reduce using rule 93
			(reduce using rule 47)

	';'            reduce using rule 93
			(reduce using rule 47)

	'<'            reduce using rule 93
			(reduce using rule 47)

	'<='           reduce using rule 93
			(reduce using rule 47)

	'=='           reduce using rule 93
			(reduce using rule 47)

	'>'            reduce using rule 93
			(reduce using rule 47)

	'>='           reduce using rule 93
			(reduce using rule 47)

	'['            shift, and enter state 148
	']'            reduce using rule 93
			(reduce using rule 47)

	'boolean'      reduce using rule 93
			(reduce using rule 47)

	'break'        reduce using rule 93
			(reduce using rule 47)

	'continue'     reduce using rule 93
			(reduce using rule 47)

	'else'         reduce using rule 93
			(reduce using rule 47)

	'false'        reduce using rule 93
			(reduce using rule 47)

	'function'     reduce using rule 93
			(reduce using rule 47)

	'if'           reduce using rule 93
			(reduce using rule 47)

	'int'          reduce using rule 93
			(reduce using rule 47)

	'return'       reduce using rule 93
			(reduce using rule 47)

	'string'       reduce using rule 93
			(reduce using rule 47)

	'true'         reduce using rule 93
			(reduce using rule 47)

	'tuple'        reduce using rule 93
			(reduce using rule 47)

	'void'         reduce using rule 93
			(reduce using rule 47)

	'while'        reduce using rule 93
			(reduce using rule 47)

	'{'            reduce using rule 93
			(reduce using rule 47)

	'||'           reduce using rule 93
			(reduce using rule 47)

	'}'            reduce using rule 93
			(reduce using rule 47)

	L_Ident        reduce using rule 93
			(reduce using rule 47)

	L_integ        reduce using rule 93
			(reduce using rule 47)

	L_quoted       reduce using rule 93
			(reduce using rule 47)



State 72

	Stmt -> 'return' Expr . ';'                         (rule 25)
	TupR -> Expr .                                      (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'/'            reduce using rule 80
	';'            shift, and enter state 151
			(reduce using rule 80)

	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'||'           reduce using rule 80


State 73

	Expr6 -> '(' . Expr ')'                             (rule 56)
	TupR -> '(' . ListTupR ')'                          (rule 81)
	TupR1 -> '(' . TupR ')'                             (rule 83)
	Lambda -> '(' . ListLArg ')' '->' Block             (rule 94)
	Lambda1 -> '(' . Lambda ')'                         (rule 96)

	'!'            shift, and enter state 55
	'('            shift, and enter state 150
	')'            reduce using rule 90
			(reduce using rule 84)

	'-'            shift, and enter state 57
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 61
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'true'         shift, and enter state 64
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Type           goto state 79
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 80
	TupR           goto state 83
	TupR1          goto state 52
	ListTupR       goto state 84
	LArg           goto state 85
	LArg1          goto state 86
	ListLArg       goto state 87
	Lambda         goto state 88
	Lambda1        goto state 54

State 74

	Stmt -> 'return' ';' .                              (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'function'     reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'tuple'        reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 75

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 27)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 28)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 149
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 76

	Expr5 -> '-' Expr6 .                                (rule 57)
	Expr5 -> Expr6 .                                    (rule 59)

	'!'            reduce using rule 59
			(reduce using rule 57)

	'!='           reduce using rule 59
			(reduce using rule 57)

	'%'            reduce using rule 59
			(reduce using rule 57)

	'&&'           reduce using rule 59
			(reduce using rule 57)

	'('            reduce using rule 59
			(reduce using rule 57)

	')'            reduce using rule 59
			(reduce using rule 57)

	'*'            reduce using rule 59
			(reduce using rule 57)

	'+'            reduce using rule 59
			(reduce using rule 57)

	','            reduce using rule 59
			(reduce using rule 57)

	'-'            reduce using rule 59
			(reduce using rule 57)

	'/'            reduce using rule 59
			(reduce using rule 57)

	';'            reduce using rule 59
			(reduce using rule 57)

	'<'            reduce using rule 59
			(reduce using rule 57)

	'<='           reduce using rule 59
			(reduce using rule 57)

	'=='           reduce using rule 59
			(reduce using rule 57)

	'>'            reduce using rule 59
			(reduce using rule 57)

	'>='           reduce using rule 59
			(reduce using rule 57)

	']'            reduce using rule 59
			(reduce using rule 57)

	'boolean'      reduce using rule 59
			(reduce using rule 57)

	'break'        reduce using rule 59
			(reduce using rule 57)

	'continue'     reduce using rule 59
			(reduce using rule 57)

	'else'         reduce using rule 59
			(reduce using rule 57)

	'false'        reduce using rule 59
			(reduce using rule 57)

	'function'     reduce using rule 59
			(reduce using rule 57)

	'if'           reduce using rule 59
			(reduce using rule 57)

	'int'          reduce using rule 59
			(reduce using rule 57)

	'return'       reduce using rule 59
			(reduce using rule 57)

	'string'       reduce using rule 59
			(reduce using rule 57)

	'true'         reduce using rule 59
			(reduce using rule 57)

	'tuple'        reduce using rule 59
			(reduce using rule 57)

	'void'         reduce using rule 59
			(reduce using rule 57)

	'while'        reduce using rule 59
			(reduce using rule 57)

	'{'            reduce using rule 59
			(reduce using rule 57)

	'||'           reduce using rule 59
			(reduce using rule 57)

	'}'            reduce using rule 59
			(reduce using rule 57)

	L_Ident        reduce using rule 59
			(reduce using rule 57)

	L_integ        reduce using rule 59
			(reduce using rule 57)

	L_quoted       reduce using rule 59
			(reduce using rule 57)



State 77

	TupR -> Expr .                                      (rule 80)

	'!'            reduce using rule 80
	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	'/'            reduce using rule 80
	';'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	']'            reduce using rule 80
	'boolean'      reduce using rule 80
	'break'        reduce using rule 80
	'continue'     reduce using rule 80
	'else'         reduce using rule 80
	'false'        reduce using rule 80
	'function'     reduce using rule 80
	'if'           reduce using rule 80
	'int'          reduce using rule 80
	'return'       reduce using rule 80
	'string'       reduce using rule 80
	'true'         reduce using rule 80
	'tuple'        reduce using rule 80
	'void'         reduce using rule 80
	'while'        reduce using rule 80
	'{'            reduce using rule 80
	'||'           reduce using rule 80
	'}'            reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 78

	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 53)
	Expr6 -> Ident . '[' Expr ']'                       (rule 55)
	TupL -> Ident .                                     (rule 73)
	Lambda -> Ident .                                   (rule 93)

	'!='           reduce using rule 93
			(reduce using rule 47)

	'%'            reduce using rule 93
			(reduce using rule 47)

	'&&'           reduce using rule 93
			(reduce using rule 47)

	'('            shift, and enter state 115
	')'            reduce using rule 93
			(reduce using rule 73)
			(reduce using rule 47)

	'*'            reduce using rule 93
			(reduce using rule 47)

	'+'            reduce using rule 93
			(reduce using rule 47)

	','            reduce using rule 93
			(reduce using rule 73)
			(reduce using rule 47)

	'-'            reduce using rule 93
			(reduce using rule 47)

	'/'            reduce using rule 93
			(reduce using rule 47)

	'<'            reduce using rule 93
			(reduce using rule 47)

	'<='           reduce using rule 93
			(reduce using rule 47)

	'=='           reduce using rule 93
			(reduce using rule 47)

	'>'            reduce using rule 93
			(reduce using rule 47)

	'>='           reduce using rule 93
			(reduce using rule 47)

	'['            shift, and enter state 148
	'||'           reduce using rule 93
			(reduce using rule 47)



State 79

	LArg -> Type . Ident                                (rule 87)

	L_Ident        shift, and enter state 2

	Ident          goto state 147

State 80

	Expr6 -> '(' Expr . ')'                             (rule 56)
	TupR -> Expr .                                      (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	')'            shift, and enter state 146
			(reduce using rule 80)

	'*'            reduce using rule 80
	'+'            reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	'/'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'||'           reduce using rule 80


State 81

	TupL1 -> '(' TupL . ')'                             (rule 76)
	ListTupL -> TupL .                                  (rule 78)
	ListTupL -> TupL . ',' ListTupL                     (rule 79)

	')'            shift, and enter state 144
			(reduce using rule 78)

	','            shift, and enter state 145


State 82

	TupL -> '(' ListTupL . ')'                          (rule 74)

	')'            shift, and enter state 143


State 83

	Expr6 -> TupR .                                     (rule 49)
	TupR1 -> '(' TupR . ')'                             (rule 83)
	ListTupR -> TupR .                                  (rule 85)
	ListTupR -> TupR . ',' ListTupR                     (rule 86)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            shift, and enter state 141
			(reduce using rule 85)
			(reduce using rule 49)

	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            shift, and enter state 142
			(reduce using rule 49)

	'-'            reduce using rule 49
	'/'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 84

	TupR -> '(' ListTupR . ')'                          (rule 81)

	')'            shift, and enter state 140


State 85

	ListLArg -> LArg .                                  (rule 91)
	ListLArg -> LArg . ',' ListLArg                     (rule 92)

	')'            reduce using rule 91
	','            shift, and enter state 139


State 86

	LArg -> LArg1 .                                     (rule 88)

	')'            reduce using rule 88
	','            reduce using rule 88


State 87

	Lambda -> '(' ListLArg . ')' '->' Block             (rule 94)

	')'            shift, and enter state 138


State 88

	Expr6 -> Lambda .                                   (rule 50)
	Lambda1 -> '(' Lambda . ')'                         (rule 96)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            shift, and enter state 137
			(reduce using rule 50)

	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 89

	Expr6 -> '(' . Expr ')'                             (rule 56)
	TupL -> '(' . ListTupL ')'                          (rule 74)
	TupL1 -> '(' . TupL ')'                             (rule 76)
	TupR -> '(' . ListTupR ')'                          (rule 81)
	TupR1 -> '(' . TupR ')'                             (rule 83)
	LArg1 -> '(' . LArg ')'                             (rule 89)
	Lambda -> '(' . ListLArg ')' '->' Block             (rule 94)
	Lambda1 -> '(' . Lambda ')'                         (rule 96)

	'!'            shift, and enter state 55
	'('            shift, and enter state 89
	')'            reduce using rule 90
			(reduce using rule 84)
			(reduce using rule 77)

	'-'            shift, and enter state 57
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 61
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'true'         shift, and enter state 64
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 78
	Integer        goto state 35
	String         goto state 36
	Type           goto state 79
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 80
	TupL           goto state 81
	TupL1          goto state 50
	ListTupL       goto state 82
	TupR           goto state 83
	TupR1          goto state 52
	ListTupR       goto state 84
	LArg           goto state 136
	LArg1          goto state 86
	ListLArg       goto state 87
	Lambda         goto state 88
	Lambda1        goto state 54

State 90

	Expr5 -> '!' Expr6 .                                (rule 58)
	Expr5 -> Expr6 .                                    (rule 59)

	'!'            reduce using rule 59
			(reduce using rule 58)

	'!='           reduce using rule 59
			(reduce using rule 58)

	'%'            reduce using rule 59
			(reduce using rule 58)

	'&&'           reduce using rule 59
			(reduce using rule 58)

	'('            reduce using rule 59
			(reduce using rule 58)

	')'            reduce using rule 59
			(reduce using rule 58)

	'*'            reduce using rule 59
			(reduce using rule 58)

	'+'            reduce using rule 59
			(reduce using rule 58)

	','            reduce using rule 59
			(reduce using rule 58)

	'-'            reduce using rule 59
			(reduce using rule 58)

	'/'            reduce using rule 59
			(reduce using rule 58)

	';'            reduce using rule 59
			(reduce using rule 58)

	'<'            reduce using rule 59
			(reduce using rule 58)

	'<='           reduce using rule 59
			(reduce using rule 58)

	'=='           reduce using rule 59
			(reduce using rule 58)

	'>'            reduce using rule 59
			(reduce using rule 58)

	'>='           reduce using rule 59
			(reduce using rule 58)

	']'            reduce using rule 59
			(reduce using rule 58)

	'boolean'      reduce using rule 59
			(reduce using rule 58)

	'break'        reduce using rule 59
			(reduce using rule 58)

	'continue'     reduce using rule 59
			(reduce using rule 58)

	'else'         reduce using rule 59
			(reduce using rule 58)

	'false'        reduce using rule 59
			(reduce using rule 58)

	'function'     reduce using rule 59
			(reduce using rule 58)

	'if'           reduce using rule 59
			(reduce using rule 58)

	'int'          reduce using rule 59
			(reduce using rule 58)

	'return'       reduce using rule 59
			(reduce using rule 58)

	'string'       reduce using rule 59
			(reduce using rule 58)

	'true'         reduce using rule 59
			(reduce using rule 58)

	'tuple'        reduce using rule 59
			(reduce using rule 58)

	'void'         reduce using rule 59
			(reduce using rule 58)

	'while'        reduce using rule 59
			(reduce using rule 58)

	'{'            reduce using rule 59
			(reduce using rule 58)

	'||'           reduce using rule 59
			(reduce using rule 58)

	'}'            reduce using rule 59
			(reduce using rule 58)

	L_Ident        reduce using rule 59
			(reduce using rule 58)

	L_integ        reduce using rule 59
			(reduce using rule 58)

	L_quoted       reduce using rule 59
			(reduce using rule 58)



State 91

	Stmt -> TupL '=' . TupR                             (rule 22)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 77
	TupR           goto state 135
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 92

	Stmt -> Expr ';' .                                  (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'function'     reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'tuple'        reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 93

	Expr -> Expr1 '||' . Expr                           (rule 68)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 134
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 94

	Expr2 -> Expr2 RelOp . Expr3                        (rule 64)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 133
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 77
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 95

	RelOp -> '!=' .                                     (rule 110)

	'!'            reduce using rule 110
	'('            reduce using rule 110
	'-'            reduce using rule 110
	'false'        reduce using rule 110
	'true'         reduce using rule 110
	L_Ident        reduce using rule 110
	L_integ        reduce using rule 110
	L_quoted       reduce using rule 110


State 96

	Expr1 -> Expr2 '&&' . Expr1                         (rule 66)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 132
	Expr           goto state 77
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 97

	RelOp -> '<' .                                      (rule 105)

	'!'            reduce using rule 105
	'('            reduce using rule 105
	'-'            reduce using rule 105
	'false'        reduce using rule 105
	'true'         reduce using rule 105
	L_Ident        reduce using rule 105
	L_integ        reduce using rule 105
	L_quoted       reduce using rule 105


State 98

	RelOp -> '<=' .                                     (rule 106)

	'!'            reduce using rule 106
	'('            reduce using rule 106
	'-'            reduce using rule 106
	'false'        reduce using rule 106
	'true'         reduce using rule 106
	L_Ident        reduce using rule 106
	L_integ        reduce using rule 106
	L_quoted       reduce using rule 106


State 99

	RelOp -> '==' .                                     (rule 109)

	'!'            reduce using rule 109
	'('            reduce using rule 109
	'-'            reduce using rule 109
	'false'        reduce using rule 109
	'true'         reduce using rule 109
	L_Ident        reduce using rule 109
	L_integ        reduce using rule 109
	L_quoted       reduce using rule 109


State 100

	RelOp -> '>' .                                      (rule 107)

	'!'            reduce using rule 107
	'('            reduce using rule 107
	'-'            reduce using rule 107
	'false'        reduce using rule 107
	'true'         reduce using rule 107
	L_Ident        reduce using rule 107
	L_integ        reduce using rule 107
	L_quoted       reduce using rule 107


State 101

	RelOp -> '>=' .                                     (rule 108)

	'!'            reduce using rule 108
	'('            reduce using rule 108
	'-'            reduce using rule 108
	'false'        reduce using rule 108
	'true'         reduce using rule 108
	L_Ident        reduce using rule 108
	L_integ        reduce using rule 108
	L_quoted       reduce using rule 108


State 102

	Expr3 -> Expr3 AddOp . Expr4                        (rule 62)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 131
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 77
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 103

	AddOp -> '+' .                                      (rule 100)

	'!'            reduce using rule 100
	'('            reduce using rule 100
	'-'            reduce using rule 100
	'false'        reduce using rule 100
	'true'         reduce using rule 100
	L_Ident        reduce using rule 100
	L_integ        reduce using rule 100
	L_quoted       reduce using rule 100


State 104

	AddOp -> '-' .                                      (rule 101)

	'!'            reduce using rule 101
	'('            reduce using rule 101
	'-'            reduce using rule 101
	'false'        reduce using rule 101
	'true'         reduce using rule 101
	L_Ident        reduce using rule 101
	L_integ        reduce using rule 101
	L_quoted       reduce using rule 101


State 105

	Expr4 -> Expr4 MulOp . Expr5                        (rule 60)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 130
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 77
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 106

	MulOp -> '%' .                                      (rule 104)

	'!'            reduce using rule 104
	'('            reduce using rule 104
	'-'            reduce using rule 104
	'false'        reduce using rule 104
	'true'         reduce using rule 104
	L_Ident        reduce using rule 104
	L_integ        reduce using rule 104
	L_quoted       reduce using rule 104


State 107

	MulOp -> '*' .                                      (rule 102)

	'!'            reduce using rule 102
	'('            reduce using rule 102
	'-'            reduce using rule 102
	'false'        reduce using rule 102
	'true'         reduce using rule 102
	L_Ident        reduce using rule 102
	L_integ        reduce using rule 102
	L_quoted       reduce using rule 102


State 108

	MulOp -> '/' .                                      (rule 103)

	'!'            reduce using rule 103
	'('            reduce using rule 103
	'-'            reduce using rule 103
	'false'        reduce using rule 103
	'true'         reduce using rule 103
	L_Ident        reduce using rule 103
	L_integ        reduce using rule 103
	L_quoted       reduce using rule 103


State 109

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)
	Stmt -> Type Ident . '[' Expr ']'                   (rule 19)
	Item -> Ident .                                     (rule 34)
	Item -> Ident . '=' Expr                            (rule 35)

	'('            shift, and enter state 16
	','            reduce using rule 34
	';'            reduce using rule 34
	'='            shift, and enter state 128
	'['            shift, and enter state 129


State 110

	ListItem -> Item .                                  (rule 36)
	ListItem -> Item . ',' ListItem                     (rule 37)

	','            shift, and enter state 127
	';'            reduce using rule 36


State 111

	Stmt -> Type ListItem . ';'                         (rule 18)

	';'            shift, and enter state 126


State 112

	ListStmt -> Stmt ListStmt .                         (rule 15)

	'}'            reduce using rule 15


State 113

	Block -> '{' ListStmt '}' .                         (rule 13)

	'!'            reduce using rule 13
	'!='           reduce using rule 13
	'%'            reduce using rule 13
	'&&'           reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'*'            reduce using rule 13
	'+'            reduce using rule 13
	','            reduce using rule 13
	'-'            reduce using rule 13
	'/'            reduce using rule 13
	';'            reduce using rule 13
	'<'            reduce using rule 13
	'<='           reduce using rule 13
	'=='           reduce using rule 13
	'>'            reduce using rule 13
	'>='           reduce using rule 13
	']'            reduce using rule 13
	'boolean'      reduce using rule 13
	'break'        reduce using rule 13
	'continue'     reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'function'     reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'tuple'        reduce using rule 13
	'void'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'||'           reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 114

	Stmt -> TopDef ';' .                                (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'function'     reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'tuple'        reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 115

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 53)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	')'            reduce using rule 70
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 124
	ListExpr       goto state 125
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 116

	Stmt -> Ident '++' . ';'                            (rule 23)

	';'            shift, and enter state 123


State 117

	Stmt -> Ident '--' . ';'                            (rule 24)

	';'            shift, and enter state 122


State 118

	Stmt -> Ident '=' . Expr ';'                        (rule 20)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 121
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 119

	Stmt -> Ident '[' . Expr ']' '=' Expr               (rule 21)
	Expr6 -> Ident '[' . Expr ']'                       (rule 55)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 120
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 120

	Stmt -> Ident '[' Expr . ']' '=' Expr               (rule 21)
	Expr6 -> Ident '[' Expr . ']'                       (rule 55)
	TupR -> Expr .                                      (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'/'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	']'            shift, and enter state 173
			(reduce using rule 80)

	'||'           reduce using rule 80


State 121

	Stmt -> Ident '=' Expr . ';'                        (rule 20)
	TupR -> Expr .                                      (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'/'            reduce using rule 80
	';'            shift, and enter state 172
			(reduce using rule 80)

	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'||'           reduce using rule 80


State 122

	Stmt -> Ident '--' ';' .                            (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'function'     reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'tuple'        reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 123

	Stmt -> Ident '++' ';' .                            (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'function'     reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'tuple'        reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 124

	ListExpr -> Expr .                                  (rule 71)
	ListExpr -> Expr . ',' ListExpr                     (rule 72)
	TupR -> Expr .                                      (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	')'            reduce using rule 80
			(reduce using rule 71)

	'*'            reduce using rule 80
	'+'            reduce using rule 80
	','            shift, and enter state 171
			(reduce using rule 80)

	'-'            reduce using rule 80
	'/'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'||'           reduce using rule 80


State 125

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 53)

	')'            shift, and enter state 170


State 126

	Stmt -> Type ListItem ';' .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'function'     reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'tuple'        reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 127

	ListItem -> Item ',' . ListItem                     (rule 37)

	L_Ident        shift, and enter state 2

	Ident          goto state 168
	Item           goto state 110
	ListItem       goto state 169

State 128

	Item -> Ident '=' . Expr                            (rule 35)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 167
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 129

	Stmt -> Type Ident '[' . Expr ']'                   (rule 19)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 166
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 130

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 60)
	Expr4 -> Expr5 .                                    (rule 61)

	'!'            reduce using rule 61
			(reduce using rule 60)

	'!='           reduce using rule 61
			(reduce using rule 60)

	'%'            reduce using rule 61
			(reduce using rule 60)

	'&&'           reduce using rule 61
			(reduce using rule 60)

	'('            reduce using rule 61
			(reduce using rule 60)

	')'            reduce using rule 61
			(reduce using rule 60)

	'*'            reduce using rule 61
			(reduce using rule 60)

	'+'            reduce using rule 61
			(reduce using rule 60)

	','            reduce using rule 61
			(reduce using rule 60)

	'-'            reduce using rule 61
			(reduce using rule 60)

	'/'            reduce using rule 61
			(reduce using rule 60)

	';'            reduce using rule 61
			(reduce using rule 60)

	'<'            reduce using rule 61
			(reduce using rule 60)

	'<='           reduce using rule 61
			(reduce using rule 60)

	'=='           reduce using rule 61
			(reduce using rule 60)

	'>'            reduce using rule 61
			(reduce using rule 60)

	'>='           reduce using rule 61
			(reduce using rule 60)

	']'            reduce using rule 61
			(reduce using rule 60)

	'boolean'      reduce using rule 61
			(reduce using rule 60)

	'break'        reduce using rule 61
			(reduce using rule 60)

	'continue'     reduce using rule 61
			(reduce using rule 60)

	'else'         reduce using rule 61
			(reduce using rule 60)

	'false'        reduce using rule 61
			(reduce using rule 60)

	'function'     reduce using rule 61
			(reduce using rule 60)

	'if'           reduce using rule 61
			(reduce using rule 60)

	'int'          reduce using rule 61
			(reduce using rule 60)

	'return'       reduce using rule 61
			(reduce using rule 60)

	'string'       reduce using rule 61
			(reduce using rule 60)

	'true'         reduce using rule 61
			(reduce using rule 60)

	'tuple'        reduce using rule 61
			(reduce using rule 60)

	'void'         reduce using rule 61
			(reduce using rule 60)

	'while'        reduce using rule 61
			(reduce using rule 60)

	'{'            reduce using rule 61
			(reduce using rule 60)

	'||'           reduce using rule 61
			(reduce using rule 60)

	'}'            reduce using rule 61
			(reduce using rule 60)

	L_Ident        reduce using rule 61
			(reduce using rule 60)

	L_integ        reduce using rule 61
			(reduce using rule 60)

	L_quoted       reduce using rule 61
			(reduce using rule 60)



State 131

	Expr4 -> Expr4 . MulOp Expr5                        (rule 60)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 62)
	Expr3 -> Expr4 .                                    (rule 63)

	'!'            reduce using rule 63
			(reduce using rule 62)

	'!='           reduce using rule 63
			(reduce using rule 62)

	'%'            shift, and enter state 106
			(reduce using rule 63)
			(reduce using rule 62)

	'&&'           reduce using rule 63
			(reduce using rule 62)

	'('            reduce using rule 63
			(reduce using rule 62)

	')'            reduce using rule 63
			(reduce using rule 62)

	'*'            shift, and enter state 107
			(reduce using rule 63)
			(reduce using rule 62)

	'+'            reduce using rule 63
			(reduce using rule 62)

	','            reduce using rule 63
			(reduce using rule 62)

	'-'            reduce using rule 63
			(reduce using rule 62)

	'/'            shift, and enter state 108
			(reduce using rule 63)
			(reduce using rule 62)

	';'            reduce using rule 63
			(reduce using rule 62)

	'<'            reduce using rule 63
			(reduce using rule 62)

	'<='           reduce using rule 63
			(reduce using rule 62)

	'=='           reduce using rule 63
			(reduce using rule 62)

	'>'            reduce using rule 63
			(reduce using rule 62)

	'>='           reduce using rule 63
			(reduce using rule 62)

	']'            reduce using rule 63
			(reduce using rule 62)

	'boolean'      reduce using rule 63
			(reduce using rule 62)

	'break'        reduce using rule 63
			(reduce using rule 62)

	'continue'     reduce using rule 63
			(reduce using rule 62)

	'else'         reduce using rule 63
			(reduce using rule 62)

	'false'        reduce using rule 63
			(reduce using rule 62)

	'function'     reduce using rule 63
			(reduce using rule 62)

	'if'           reduce using rule 63
			(reduce using rule 62)

	'int'          reduce using rule 63
			(reduce using rule 62)

	'return'       reduce using rule 63
			(reduce using rule 62)

	'string'       reduce using rule 63
			(reduce using rule 62)

	'true'         reduce using rule 63
			(reduce using rule 62)

	'tuple'        reduce using rule 63
			(reduce using rule 62)

	'void'         reduce using rule 63
			(reduce using rule 62)

	'while'        reduce using rule 63
			(reduce using rule 62)

	'{'            reduce using rule 63
			(reduce using rule 62)

	'||'           reduce using rule 63
			(reduce using rule 62)

	'}'            reduce using rule 63
			(reduce using rule 62)

	L_Ident        reduce using rule 63
			(reduce using rule 62)

	L_integ        reduce using rule 63
			(reduce using rule 62)

	L_quoted       reduce using rule 63
			(reduce using rule 62)


	MulOp          goto state 105

State 132

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 66)
	Expr -> Expr1 . '||' Expr                           (rule 68)
	Expr -> Expr1 .                                     (rule 69)

	'!'            reduce using rule 69
			(reduce using rule 66)

	'!='           reduce using rule 69
			(reduce using rule 66)

	'%'            reduce using rule 69
			(reduce using rule 66)

	'&&'           reduce using rule 69
			(reduce using rule 66)

	'('            reduce using rule 69
			(reduce using rule 66)

	')'            reduce using rule 69
			(reduce using rule 66)

	'*'            reduce using rule 69
			(reduce using rule 66)

	'+'            reduce using rule 69
			(reduce using rule 66)

	','            reduce using rule 69
			(reduce using rule 66)

	'-'            reduce using rule 69
			(reduce using rule 66)

	'/'            reduce using rule 69
			(reduce using rule 66)

	';'            reduce using rule 69
			(reduce using rule 66)

	'<'            reduce using rule 69
			(reduce using rule 66)

	'<='           reduce using rule 69
			(reduce using rule 66)

	'=='           reduce using rule 69
			(reduce using rule 66)

	'>'            reduce using rule 69
			(reduce using rule 66)

	'>='           reduce using rule 69
			(reduce using rule 66)

	']'            reduce using rule 69
			(reduce using rule 66)

	'boolean'      reduce using rule 69
			(reduce using rule 66)

	'break'        reduce using rule 69
			(reduce using rule 66)

	'continue'     reduce using rule 69
			(reduce using rule 66)

	'else'         reduce using rule 69
			(reduce using rule 66)

	'false'        reduce using rule 69
			(reduce using rule 66)

	'function'     reduce using rule 69
			(reduce using rule 66)

	'if'           reduce using rule 69
			(reduce using rule 66)

	'int'          reduce using rule 69
			(reduce using rule 66)

	'return'       reduce using rule 69
			(reduce using rule 66)

	'string'       reduce using rule 69
			(reduce using rule 66)

	'true'         reduce using rule 69
			(reduce using rule 66)

	'tuple'        reduce using rule 69
			(reduce using rule 66)

	'void'         reduce using rule 69
			(reduce using rule 66)

	'while'        reduce using rule 69
			(reduce using rule 66)

	'{'            reduce using rule 69
			(reduce using rule 66)

	'||'           shift, and enter state 93
			(reduce using rule 69)
			(reduce using rule 66)

	'}'            reduce using rule 69
			(reduce using rule 66)

	L_Ident        reduce using rule 69
			(reduce using rule 66)

	L_integ        reduce using rule 69
			(reduce using rule 66)

	L_quoted       reduce using rule 69
			(reduce using rule 66)



State 133

	Expr3 -> Expr3 . AddOp Expr4                        (rule 62)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 64)
	Expr2 -> Expr3 .                                    (rule 65)

	'!'            reduce using rule 65
			(reduce using rule 64)

	'!='           reduce using rule 65
			(reduce using rule 64)

	'%'            reduce using rule 65
			(reduce using rule 64)

	'&&'           reduce using rule 65
			(reduce using rule 64)

	'('            reduce using rule 65
			(reduce using rule 64)

	')'            reduce using rule 65
			(reduce using rule 64)

	'*'            reduce using rule 65
			(reduce using rule 64)

	'+'            shift, and enter state 103
			(reduce using rule 65)
			(reduce using rule 64)

	','            reduce using rule 65
			(reduce using rule 64)

	'-'            shift, and enter state 104
			(reduce using rule 65)
			(reduce using rule 64)

	'/'            reduce using rule 65
			(reduce using rule 64)

	';'            reduce using rule 65
			(reduce using rule 64)

	'<'            reduce using rule 65
			(reduce using rule 64)

	'<='           reduce using rule 65
			(reduce using rule 64)

	'=='           reduce using rule 65
			(reduce using rule 64)

	'>'            reduce using rule 65
			(reduce using rule 64)

	'>='           reduce using rule 65
			(reduce using rule 64)

	']'            reduce using rule 65
			(reduce using rule 64)

	'boolean'      reduce using rule 65
			(reduce using rule 64)

	'break'        reduce using rule 65
			(reduce using rule 64)

	'continue'     reduce using rule 65
			(reduce using rule 64)

	'else'         reduce using rule 65
			(reduce using rule 64)

	'false'        reduce using rule 65
			(reduce using rule 64)

	'function'     reduce using rule 65
			(reduce using rule 64)

	'if'           reduce using rule 65
			(reduce using rule 64)

	'int'          reduce using rule 65
			(reduce using rule 64)

	'return'       reduce using rule 65
			(reduce using rule 64)

	'string'       reduce using rule 65
			(reduce using rule 64)

	'true'         reduce using rule 65
			(reduce using rule 64)

	'tuple'        reduce using rule 65
			(reduce using rule 64)

	'void'         reduce using rule 65
			(reduce using rule 64)

	'while'        reduce using rule 65
			(reduce using rule 64)

	'{'            reduce using rule 65
			(reduce using rule 64)

	'||'           reduce using rule 65
			(reduce using rule 64)

	'}'            reduce using rule 65
			(reduce using rule 64)

	L_Ident        reduce using rule 65
			(reduce using rule 64)

	L_integ        reduce using rule 65
			(reduce using rule 64)

	L_quoted       reduce using rule 65
			(reduce using rule 64)


	AddOp          goto state 102

State 134

	Expr -> Expr1 '||' Expr .                           (rule 68)
	TupR -> Expr .                                      (rule 80)

	'!'            reduce using rule 80
			(reduce using rule 68)

	'!='           reduce using rule 80
			(reduce using rule 68)

	'%'            reduce using rule 80
			(reduce using rule 68)

	'&&'           reduce using rule 80
			(reduce using rule 68)

	'('            reduce using rule 80
			(reduce using rule 68)

	')'            reduce using rule 80
			(reduce using rule 68)

	'*'            reduce using rule 80
			(reduce using rule 68)

	'+'            reduce using rule 80
			(reduce using rule 68)

	','            reduce using rule 80
			(reduce using rule 68)

	'-'            reduce using rule 80
			(reduce using rule 68)

	'/'            reduce using rule 80
			(reduce using rule 68)

	';'            reduce using rule 80
			(reduce using rule 68)

	'<'            reduce using rule 80
			(reduce using rule 68)

	'<='           reduce using rule 80
			(reduce using rule 68)

	'=='           reduce using rule 80
			(reduce using rule 68)

	'>'            reduce using rule 80
			(reduce using rule 68)

	'>='           reduce using rule 80
			(reduce using rule 68)

	']'            reduce using rule 80
			(reduce using rule 68)

	'boolean'      reduce using rule 80
			(reduce using rule 68)

	'break'        reduce using rule 80
			(reduce using rule 68)

	'continue'     reduce using rule 80
			(reduce using rule 68)

	'else'         reduce using rule 80
			(reduce using rule 68)

	'false'        reduce using rule 80
			(reduce using rule 68)

	'function'     reduce using rule 80
			(reduce using rule 68)

	'if'           reduce using rule 80
			(reduce using rule 68)

	'int'          reduce using rule 80
			(reduce using rule 68)

	'return'       reduce using rule 80
			(reduce using rule 68)

	'string'       reduce using rule 80
			(reduce using rule 68)

	'true'         reduce using rule 80
			(reduce using rule 68)

	'tuple'        reduce using rule 80
			(reduce using rule 68)

	'void'         reduce using rule 80
			(reduce using rule 68)

	'while'        reduce using rule 80
			(reduce using rule 68)

	'{'            reduce using rule 80
			(reduce using rule 68)

	'||'           reduce using rule 80
			(reduce using rule 68)

	'}'            reduce using rule 80
			(reduce using rule 68)

	L_Ident        reduce using rule 80
			(reduce using rule 68)

	L_integ        reduce using rule 80
			(reduce using rule 68)

	L_quoted       reduce using rule 80
			(reduce using rule 68)



State 135

	Stmt -> TupL '=' TupR .                             (rule 22)
	Expr6 -> TupR .                                     (rule 49)

	'!'            reduce using rule 49
			(reduce using rule 22)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
			(reduce using rule 22)

	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
			(reduce using rule 22)

	'/'            reduce using rule 49
	';'            reduce using rule 49
			(reduce using rule 22)

	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'boolean'      reduce using rule 49
			(reduce using rule 22)

	'break'        reduce using rule 49
			(reduce using rule 22)

	'continue'     reduce using rule 49
			(reduce using rule 22)

	'else'         reduce using rule 49
			(reduce using rule 22)

	'false'        reduce using rule 49
			(reduce using rule 22)

	'function'     reduce using rule 49
			(reduce using rule 22)

	'if'           reduce using rule 49
			(reduce using rule 22)

	'int'          reduce using rule 49
			(reduce using rule 22)

	'return'       reduce using rule 49
			(reduce using rule 22)

	'string'       reduce using rule 49
			(reduce using rule 22)

	'true'         reduce using rule 49
			(reduce using rule 22)

	'tuple'        reduce using rule 49
			(reduce using rule 22)

	'void'         reduce using rule 49
			(reduce using rule 22)

	'while'        reduce using rule 49
			(reduce using rule 22)

	'{'            reduce using rule 49
			(reduce using rule 22)

	'||'           reduce using rule 49
	'}'            reduce using rule 49
			(reduce using rule 22)

	L_Ident        reduce using rule 49
			(reduce using rule 22)

	L_integ        reduce using rule 49
			(reduce using rule 22)

	L_quoted       reduce using rule 49
			(reduce using rule 22)



State 136

	LArg1 -> '(' LArg . ')'                             (rule 89)
	ListLArg -> LArg .                                  (rule 91)
	ListLArg -> LArg . ',' ListLArg                     (rule 92)

	')'            shift, and enter state 165
			(reduce using rule 91)

	','            shift, and enter state 139


State 137

	Lambda1 -> '(' Lambda ')' .                         (rule 96)

	'!'            reduce using rule 96
	'!='           reduce using rule 96
	'%'            reduce using rule 96
	'&&'           reduce using rule 96
	'('            reduce using rule 96
	')'            reduce using rule 96
	'*'            reduce using rule 96
	'+'            reduce using rule 96
	','            reduce using rule 96
	'-'            reduce using rule 96
	'/'            reduce using rule 96
	';'            reduce using rule 96
	'<'            reduce using rule 96
	'<='           reduce using rule 96
	'=='           reduce using rule 96
	'>'            reduce using rule 96
	'>='           reduce using rule 96
	']'            reduce using rule 96
	'boolean'      reduce using rule 96
	'break'        reduce using rule 96
	'continue'     reduce using rule 96
	'else'         reduce using rule 96
	'false'        reduce using rule 96
	'function'     reduce using rule 96
	'if'           reduce using rule 96
	'int'          reduce using rule 96
	'return'       reduce using rule 96
	'string'       reduce using rule 96
	'true'         reduce using rule 96
	'tuple'        reduce using rule 96
	'void'         reduce using rule 96
	'while'        reduce using rule 96
	'{'            reduce using rule 96
	'||'           reduce using rule 96
	'}'            reduce using rule 96
	L_Ident        reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96


State 138

	Lambda -> '(' ListLArg ')' . '->' Block             (rule 94)

	'->'           shift, and enter state 164


State 139

	ListLArg -> LArg ',' . ListLArg                     (rule 92)

	'('            shift, and enter state 163
	')'            reduce using rule 90
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12

	Type           goto state 79
	LArg           goto state 85
	LArg1          goto state 86
	ListLArg       goto state 162

State 140

	TupR -> '(' ListTupR ')' .                          (rule 81)

	'!'            reduce using rule 81
	'!='           reduce using rule 81
	'%'            reduce using rule 81
	'&&'           reduce using rule 81
	'('            reduce using rule 81
	')'            reduce using rule 81
	'*'            reduce using rule 81
	'+'            reduce using rule 81
	','            reduce using rule 81
	'-'            reduce using rule 81
	'/'            reduce using rule 81
	';'            reduce using rule 81
	'<'            reduce using rule 81
	'<='           reduce using rule 81
	'=='           reduce using rule 81
	'>'            reduce using rule 81
	'>='           reduce using rule 81
	']'            reduce using rule 81
	'boolean'      reduce using rule 81
	'break'        reduce using rule 81
	'continue'     reduce using rule 81
	'else'         reduce using rule 81
	'false'        reduce using rule 81
	'function'     reduce using rule 81
	'if'           reduce using rule 81
	'int'          reduce using rule 81
	'return'       reduce using rule 81
	'string'       reduce using rule 81
	'true'         reduce using rule 81
	'tuple'        reduce using rule 81
	'void'         reduce using rule 81
	'while'        reduce using rule 81
	'{'            reduce using rule 81
	'||'           reduce using rule 81
	'}'            reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 141

	TupR1 -> '(' TupR ')' .                             (rule 83)

	'!'            reduce using rule 83
	'!='           reduce using rule 83
	'%'            reduce using rule 83
	'&&'           reduce using rule 83
	'('            reduce using rule 83
	')'            reduce using rule 83
	'*'            reduce using rule 83
	'+'            reduce using rule 83
	','            reduce using rule 83
	'-'            reduce using rule 83
	'/'            reduce using rule 83
	';'            reduce using rule 83
	'<'            reduce using rule 83
	'<='           reduce using rule 83
	'=='           reduce using rule 83
	'>'            reduce using rule 83
	'>='           reduce using rule 83
	']'            reduce using rule 83
	'boolean'      reduce using rule 83
	'break'        reduce using rule 83
	'continue'     reduce using rule 83
	'else'         reduce using rule 83
	'false'        reduce using rule 83
	'function'     reduce using rule 83
	'if'           reduce using rule 83
	'int'          reduce using rule 83
	'return'       reduce using rule 83
	'string'       reduce using rule 83
	'true'         reduce using rule 83
	'tuple'        reduce using rule 83
	'void'         reduce using rule 83
	'while'        reduce using rule 83
	'{'            reduce using rule 83
	'||'           reduce using rule 83
	'}'            reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 142

	ListTupR -> TupR ',' . ListTupR                     (rule 86)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	')'            reduce using rule 84
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 77
	TupR           goto state 160
	TupR1          goto state 52
	ListTupR       goto state 161
	Lambda         goto state 53
	Lambda1        goto state 54

State 143

	TupL -> '(' ListTupL ')' .                          (rule 74)

	')'            reduce using rule 74
	','            reduce using rule 74
	'='            reduce using rule 74


State 144

	TupL1 -> '(' TupL ')' .                             (rule 76)

	')'            reduce using rule 76
	','            reduce using rule 76
	'='            reduce using rule 76


State 145

	ListTupL -> TupL ',' . ListTupL                     (rule 79)

	'('            shift, and enter state 159
	')'            reduce using rule 77
	L_Ident        shift, and enter state 2

	Ident          goto state 156
	TupL           goto state 157
	TupL1          goto state 50
	ListTupL       goto state 158

State 146

	Expr6 -> '(' Expr ')' .                             (rule 56)

	'!'            reduce using rule 56
	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'boolean'      reduce using rule 56
	'break'        reduce using rule 56
	'continue'     reduce using rule 56
	'else'         reduce using rule 56
	'false'        reduce using rule 56
	'function'     reduce using rule 56
	'if'           reduce using rule 56
	'int'          reduce using rule 56
	'return'       reduce using rule 56
	'string'       reduce using rule 56
	'true'         reduce using rule 56
	'tuple'        reduce using rule 56
	'void'         reduce using rule 56
	'while'        reduce using rule 56
	'{'            reduce using rule 56
	'||'           reduce using rule 56
	'}'            reduce using rule 56
	L_Ident        reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56


State 147

	LArg -> Type Ident .                                (rule 87)

	')'            reduce using rule 87
	','            reduce using rule 87


State 148

	Expr6 -> Ident '[' . Expr ']'                       (rule 55)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 155
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 149

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 27)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 28)
	TupR -> Expr .                                      (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	')'            shift, and enter state 154
			(reduce using rule 80)

	'*'            reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'/'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'||'           reduce using rule 80


State 150

	Expr6 -> '(' . Expr ')'                             (rule 56)
	TupR -> '(' . ListTupR ')'                          (rule 81)
	TupR1 -> '(' . TupR ')'                             (rule 83)
	LArg1 -> '(' . LArg ')'                             (rule 89)
	Lambda -> '(' . ListLArg ')' '->' Block             (rule 94)
	Lambda1 -> '(' . Lambda ')'                         (rule 96)

	'!'            shift, and enter state 55
	'('            shift, and enter state 150
	')'            reduce using rule 90
			(reduce using rule 84)

	'-'            shift, and enter state 57
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 61
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'true'         shift, and enter state 64
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Type           goto state 79
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 80
	TupR           goto state 83
	TupR1          goto state 52
	ListTupR       goto state 84
	LArg           goto state 136
	LArg1          goto state 86
	ListLArg       goto state 87
	Lambda         goto state 88
	Lambda1        goto state 54

State 151

	Stmt -> 'return' Expr ';' .                         (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'function'     reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'tuple'        reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 152

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 29)
	TupR -> Expr .                                      (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	')'            shift, and enter state 153
			(reduce using rule 80)

	'*'            reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'/'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'||'           reduce using rule 80


State 153

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 29)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	';'            shift, and enter state 58
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 59
	'continue'     shift, and enter state 60
	'false'        shift, and enter state 61
	'function'     shift, and enter state 8
	'if'           shift, and enter state 62
	'int'          shift, and enter state 9
	'return'       shift, and enter state 63
	'string'       shift, and enter state 10
	'true'         shift, and enter state 64
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12
	'while'        shift, and enter state 65
	'{'            shift, and enter state 32
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 34
	Integer        goto state 35
	String         goto state 36
	TopDef         goto state 37
	Block          goto state 38
	Stmt           goto state 181
	Type           goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 48
	TupL           goto state 49
	TupL1          goto state 50
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 154

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 27)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 28)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	';'            shift, and enter state 58
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 59
	'continue'     shift, and enter state 60
	'false'        shift, and enter state 61
	'function'     shift, and enter state 8
	'if'           shift, and enter state 62
	'int'          shift, and enter state 9
	'return'       shift, and enter state 63
	'string'       shift, and enter state 10
	'true'         shift, and enter state 64
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12
	'while'        shift, and enter state 65
	'{'            shift, and enter state 32
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 34
	Integer        goto state 35
	String         goto state 36
	TopDef         goto state 37
	Block          goto state 38
	Stmt           goto state 180
	Type           goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 48
	TupL           goto state 49
	TupL1          goto state 50
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 155

	Expr6 -> Ident '[' Expr . ']'                       (rule 55)
	TupR -> Expr .                                      (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'/'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	']'            shift, and enter state 179
			(reduce using rule 80)

	'||'           reduce using rule 80


State 156

	TupL -> Ident .                                     (rule 73)

	')'            reduce using rule 73
	','            reduce using rule 73


State 157

	ListTupL -> TupL .                                  (rule 78)
	ListTupL -> TupL . ',' ListTupL                     (rule 79)

	')'            reduce using rule 78
	','            shift, and enter state 145


State 158

	ListTupL -> TupL ',' ListTupL .                     (rule 79)

	')'            reduce using rule 79


State 159

	TupL -> '(' . ListTupL ')'                          (rule 74)
	TupL1 -> '(' . TupL ')'                             (rule 76)

	'('            shift, and enter state 159
	')'            reduce using rule 77
	L_Ident        shift, and enter state 2

	Ident          goto state 156
	TupL           goto state 81
	TupL1          goto state 50
	ListTupL       goto state 82

State 160

	Expr6 -> TupR .                                     (rule 49)
	ListTupR -> TupR .                                  (rule 85)
	ListTupR -> TupR . ',' ListTupR                     (rule 86)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 85
			(reduce using rule 49)

	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            shift, and enter state 142
			(reduce using rule 49)

	'-'            reduce using rule 49
	'/'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 161

	ListTupR -> TupR ',' ListTupR .                     (rule 86)

	')'            reduce using rule 86


State 162

	ListLArg -> LArg ',' ListLArg .                     (rule 92)

	')'            reduce using rule 92


State 163

	LArg1 -> '(' . LArg ')'                             (rule 89)

	'('            shift, and enter state 163
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12

	Type           goto state 79
	LArg           goto state 178
	LArg1          goto state 86

State 164

	Lambda -> '(' ListLArg ')' '->' . Block             (rule 94)

	'{'            shift, and enter state 32

	Block          goto state 177

State 165

	LArg1 -> '(' LArg ')' .                             (rule 89)

	')'            reduce using rule 89
	','            reduce using rule 89


State 166

	Stmt -> Type Ident '[' Expr . ']'                   (rule 19)
	TupR -> Expr .                                      (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'/'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	']'            shift, and enter state 176
			(reduce using rule 80)

	'||'           reduce using rule 80


State 167

	Item -> Ident '=' Expr .                            (rule 35)
	TupR -> Expr .                                      (rule 80)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	','            reduce using rule 80
			(reduce using rule 35)

	'-'            reduce using rule 80
	'/'            reduce using rule 80
	';'            reduce using rule 80
			(reduce using rule 35)

	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'||'           reduce using rule 80


State 168

	Item -> Ident .                                     (rule 34)
	Item -> Ident . '=' Expr                            (rule 35)

	','            reduce using rule 34
	';'            reduce using rule 34
	'='            shift, and enter state 128


State 169

	ListItem -> Item ',' ListItem .                     (rule 37)

	';'            reduce using rule 37


State 170

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 53)

	'!'            reduce using rule 53
	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'boolean'      reduce using rule 53
	'break'        reduce using rule 53
	'continue'     reduce using rule 53
	'else'         reduce using rule 53
	'false'        reduce using rule 53
	'function'     reduce using rule 53
	'if'           reduce using rule 53
	'int'          reduce using rule 53
	'return'       reduce using rule 53
	'string'       reduce using rule 53
	'true'         reduce using rule 53
	'tuple'        reduce using rule 53
	'void'         reduce using rule 53
	'while'        reduce using rule 53
	'{'            reduce using rule 53
	'||'           reduce using rule 53
	'}'            reduce using rule 53
	L_Ident        reduce using rule 53
	L_integ        reduce using rule 53
	L_quoted       reduce using rule 53


State 171

	ListExpr -> Expr ',' . ListExpr                     (rule 72)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	')'            reduce using rule 70
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 124
	ListExpr       goto state 175
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 172

	Stmt -> Ident '=' Expr ';' .                        (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'function'     reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'tuple'        reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 173

	Stmt -> Ident '[' Expr ']' . '=' Expr               (rule 21)
	Expr6 -> Ident '[' Expr ']' .                       (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            shift, and enter state 174
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55


State 174

	Stmt -> Ident '[' Expr ']' '=' . Expr               (rule 21)

	'!'            shift, and enter state 55
	'('            shift, and enter state 73
	'-'            shift, and enter state 57
	'false'        shift, and enter state 61
	'true'         shift, and enter state 64
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 71
	Integer        goto state 35
	String         goto state 36
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 183
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 175

	ListExpr -> Expr ',' ListExpr .                     (rule 72)

	')'            reduce using rule 72


State 176

	Stmt -> Type Ident '[' Expr ']' .                   (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'function'     reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'tuple'        reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 177

	Lambda -> '(' ListLArg ')' '->' Block .             (rule 94)

	'!'            reduce using rule 94
	'!='           reduce using rule 94
	'%'            reduce using rule 94
	'&&'           reduce using rule 94
	'('            reduce using rule 94
	')'            reduce using rule 94
	'*'            reduce using rule 94
	'+'            reduce using rule 94
	','            reduce using rule 94
	'-'            reduce using rule 94
	'/'            reduce using rule 94
	';'            reduce using rule 94
	'<'            reduce using rule 94
	'<='           reduce using rule 94
	'=='           reduce using rule 94
	'>'            reduce using rule 94
	'>='           reduce using rule 94
	']'            reduce using rule 94
	'boolean'      reduce using rule 94
	'break'        reduce using rule 94
	'continue'     reduce using rule 94
	'else'         reduce using rule 94
	'false'        reduce using rule 94
	'function'     reduce using rule 94
	'if'           reduce using rule 94
	'int'          reduce using rule 94
	'return'       reduce using rule 94
	'string'       reduce using rule 94
	'true'         reduce using rule 94
	'tuple'        reduce using rule 94
	'void'         reduce using rule 94
	'while'        reduce using rule 94
	'{'            reduce using rule 94
	'||'           reduce using rule 94
	'}'            reduce using rule 94
	L_Ident        reduce using rule 94
	L_integ        reduce using rule 94
	L_quoted       reduce using rule 94


State 178

	LArg1 -> '(' LArg . ')'                             (rule 89)

	')'            shift, and enter state 165


State 179

	Expr6 -> Ident '[' Expr ']' .                       (rule 55)

	'!'            reduce using rule 55
	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'boolean'      reduce using rule 55
	'break'        reduce using rule 55
	'continue'     reduce using rule 55
	'else'         reduce using rule 55
	'false'        reduce using rule 55
	'function'     reduce using rule 55
	'if'           reduce using rule 55
	'int'          reduce using rule 55
	'return'       reduce using rule 55
	'string'       reduce using rule 55
	'true'         reduce using rule 55
	'tuple'        reduce using rule 55
	'void'         reduce using rule 55
	'while'        reduce using rule 55
	'{'            reduce using rule 55
	'||'           reduce using rule 55
	'}'            reduce using rule 55
	L_Ident        reduce using rule 55
	L_integ        reduce using rule 55
	L_quoted       reduce using rule 55


State 180

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 27)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 28)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'else'         shift, and enter state 182
			(reduce using rule 27)

	'false'        reduce using rule 27
	'function'     reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'tuple'        reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 181

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'function'     reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'tuple'        reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 182

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 28)

	'!'            shift, and enter state 55
	'('            shift, and enter state 56
	'-'            shift, and enter state 57
	';'            shift, and enter state 58
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 59
	'continue'     shift, and enter state 60
	'false'        shift, and enter state 61
	'function'     shift, and enter state 8
	'if'           shift, and enter state 62
	'int'          shift, and enter state 9
	'return'       shift, and enter state 63
	'string'       shift, and enter state 10
	'true'         shift, and enter state 64
	'tuple'        shift, and enter state 11
	'void'         shift, and enter state 12
	'while'        shift, and enter state 65
	'{'            shift, and enter state 32
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 66
	L_quoted       shift, and enter state 67

	Ident          goto state 34
	Integer        goto state 35
	String         goto state 36
	TopDef         goto state 37
	Block          goto state 38
	Stmt           goto state 184
	Type           goto state 41
	Expr6          goto state 42
	Expr5          goto state 43
	Expr4          goto state 44
	Expr3          goto state 45
	Expr2          goto state 46
	Expr1          goto state 47
	Expr           goto state 48
	TupL           goto state 49
	TupL1          goto state 50
	TupR           goto state 51
	TupR1          goto state 52
	Lambda         goto state 53
	Lambda1        goto state 54

State 183

	Stmt -> Ident '[' Expr ']' '=' Expr .               (rule 21)
	TupR -> Expr .                                      (rule 80)

	'!'            reduce using rule 80
			(reduce using rule 21)

	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&&'           reduce using rule 80
	'('            reduce using rule 80
			(reduce using rule 21)

	'*'            reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
			(reduce using rule 21)

	'/'            reduce using rule 80
	';'            reduce using rule 80
			(reduce using rule 21)

	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'boolean'      reduce using rule 80
			(reduce using rule 21)

	'break'        reduce using rule 80
			(reduce using rule 21)

	'continue'     reduce using rule 80
			(reduce using rule 21)

	'else'         reduce using rule 80
			(reduce using rule 21)

	'false'        reduce using rule 80
			(reduce using rule 21)

	'function'     reduce using rule 80
			(reduce using rule 21)

	'if'           reduce using rule 80
			(reduce using rule 21)

	'int'          reduce using rule 80
			(reduce using rule 21)

	'return'       reduce using rule 80
			(reduce using rule 21)

	'string'       reduce using rule 80
			(reduce using rule 21)

	'true'         reduce using rule 80
			(reduce using rule 21)

	'tuple'        reduce using rule 80
			(reduce using rule 21)

	'void'         reduce using rule 80
			(reduce using rule 21)

	'while'        reduce using rule 80
			(reduce using rule 21)

	'{'            reduce using rule 80
			(reduce using rule 21)

	'||'           reduce using rule 80
	'}'            reduce using rule 80
			(reduce using rule 21)

	L_Ident        reduce using rule 80
			(reduce using rule 21)

	L_integ        reduce using rule 80
			(reduce using rule 21)

	L_quoted       reduce using rule 80
			(reduce using rule 21)



State 184

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'function'     reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'tuple'        reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 111
Number of terminals: 44
Number of non-terminals: 39
Number of states: 185
