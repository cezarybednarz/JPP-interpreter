-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Choc/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg -> Type Ident                                  (8)
	Arg -> Type '&' Ident                              (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	Block -> '{' ListStmt '}'                          (13)
	ListStmt ->                                        (14)
	ListStmt -> Stmt ListStmt                          (15)
	Stmt -> ';'                                        (16)
	Stmt -> Block                                      (17)
	Stmt -> Type ListItem ';'                          (18)
	Stmt -> Ident '=' Expr ';'                         (19)
	Stmt -> Ident '++' ';'                             (20)
	Stmt -> Ident '--' ';'                             (21)
	Stmt -> 'return' Expr ';'                          (22)
	Stmt -> 'return' ';'                               (23)
	Stmt -> 'if' '(' Expr ')' Block                    (24)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (25)
	Stmt -> 'while' '(' Expr ')' Block                 (26)
	Stmt -> Expr ';'                                   (27)
	Stmt -> 'break'                                    (28)
	Stmt -> 'continue'                                 (29)
	Stmt -> 'print' '(' Expr ')' ';'                   (30)
	Item -> Ident                                      (31)
	Item -> Ident '=' Expr                             (32)
	ListItem -> Item                                   (33)
	ListItem -> Item ',' ListItem                      (34)
	Type -> 'int'                                      (35)
	Type -> 'string'                                   (36)
	Type -> 'boolean'                                  (37)
	Type -> 'void'                                     (38)
	Type -> 'function' '<' Type '(' ListType ')' '>'   (39)
	ListType ->                                        (40)
	ListType -> Type                                   (41)
	ListType -> Type ',' ListType                      (42)
	Expr6 -> Ident                                     (43)
	Expr6 -> Integer                                   (44)
	Expr6 -> 'true'                                    (45)
	Expr6 -> 'false'                                   (46)
	Expr6 -> Ident '(' ListExpr ')'                    (47)
	Expr6 -> String                                    (48)
	Expr6 -> '(' Expr ')'                              (49)
	Expr5 -> '-' Expr6                                 (50)
	Expr5 -> '!' Expr6                                 (51)
	Expr5 -> Expr6                                     (52)
	Expr4 -> Expr4 MulOp Expr5                         (53)
	Expr4 -> Expr5                                     (54)
	Expr3 -> Expr3 AddOp Expr4                         (55)
	Expr3 -> Expr4                                     (56)
	Expr2 -> Expr2 RelOp Expr3                         (57)
	Expr2 -> Expr3                                     (58)
	Expr1 -> Expr2 '&&' Expr1                          (59)
	Expr1 -> Expr2                                     (60)
	Expr -> Expr1 '||' Expr                            (61)
	Expr -> Expr1                                      (62)
	ListExpr ->                                        (63)
	ListExpr -> Expr                                   (64)
	ListExpr -> Expr ',' ListExpr                      (65)
	AddOp -> '+'                                       (66)
	AddOp -> '-'                                       (67)
	MulOp -> '*'                                       (68)
	MulOp -> '/'                                       (69)
	MulOp -> '%'                                       (70)
	RelOp -> '<'                                       (71)
	RelOp -> '<='                                      (72)
	RelOp -> '>'                                       (73)
	RelOp -> '>='                                      (74)
	RelOp -> '=='                                      (75)
	RelOp -> '!='                                      (76)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'boolean'      { PT _ (TS _ 22) }
	'break'        { PT _ (TS _ 23) }
	'continue'     { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'function'     { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'print'        { PT _ (TS _ 30) }
	'return'       { PT _ (TS _ 31) }
	'string'       { PT _ (TS _ 32) }
	'true'         { PT _ (TS _ 33) }
	'void'         { PT _ (TS _ 34) }
	'while'        { PT _ (TS _ 35) }
	'{'            { PT _ (TS _ 36) }
	'||'           { PT _ (TS _ 37) }
	'}'            { PT _ (TS _ 38) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg             rules 8, 9
	ListArg         rules 10, 11, 12
	Block           rule  13
	ListStmt        rules 14, 15
	Stmt            rules 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
	Item            rules 31, 32
	ListItem        rules 33, 34
	Type            rules 35, 36, 37, 38, 39
	ListType        rules 40, 41, 42
	Expr6           rules 43, 44, 45, 46, 47, 48, 49
	Expr5           rules 50, 51, 52
	Expr4           rules 53, 54
	Expr3           rules 55, 56
	Expr2           rules 57, 58
	Expr1           rules 59, 60
	Expr            rules 61, 62
	ListExpr        rules 63, 64, 65
	AddOp           rules 66, 67
	MulOp           rules 68, 69, 70
	RelOp           rules 71, 72, 73, 74, 75, 76

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 14
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 13

State 7

	Type -> 'boolean' .                                 (rule 37)

	'&'            reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	','            reduce using rule 37
	L_Ident        reduce using rule 37


State 8

	Type -> 'function' . '<' Type '(' ListType ')' '>'    (rule 39)

	'<'            shift, and enter state 12


State 9

	Type -> 'int' .                                     (rule 35)

	'&'            reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	','            reduce using rule 35
	L_Ident        reduce using rule 35


State 10

	Type -> 'string' .                                  (rule 36)

	'&'            reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	','            reduce using rule 36
	L_Ident        reduce using rule 36


State 11

	Type -> 'void' .                                    (rule 38)

	'&'            reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	','            reduce using rule 38
	L_Ident        reduce using rule 38


State 12

	Type -> 'function' '<' . Type '(' ListType ')' '>'    (rule 39)

	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Type           goto state 16

State 13

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 15


State 14

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 15

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Arg            goto state 18
	ListArg        goto state 19
	Type           goto state 20

State 16

	Type -> 'function' '<' Type . '(' ListType ')' '>'    (rule 39)

	'('            shift, and enter state 17


State 17

	Type -> 'function' '<' Type '(' . ListType ')' '>'    (rule 39)

	')'            reduce using rule 40
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Type           goto state 25
	ListType       goto state 26

State 18

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 24


State 19

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 23


State 20

	Arg -> Type . Ident                                 (rule 8)
	Arg -> Type . '&' Ident                             (rule 9)

	'&'            shift, and enter state 22
	L_Ident        shift, and enter state 2

	Ident          goto state 21

State 21

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 22

	Arg -> Type '&' . Ident                             (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 32

State 23

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 31

	Block          goto state 30

State 24

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Arg            goto state 18
	ListArg        goto state 29
	Type           goto state 20

State 25

	ListType -> Type .                                  (rule 41)
	ListType -> Type . ',' ListType                     (rule 42)

	')'            reduce using rule 41
	','            shift, and enter state 28


State 26

	Type -> 'function' '<' Type '(' ListType . ')' '>'    (rule 39)

	')'            shift, and enter state 27


State 27

	Type -> 'function' '<' Type '(' ListType ')' . '>'    (rule 39)

	'>'            shift, and enter state 62


State 28

	ListType -> Type ',' . ListType                     (rule 42)

	')'            reduce using rule 40
	'boolean'      shift, and enter state 7
	'function'     shift, and enter state 8
	'int'          shift, and enter state 9
	'string'       shift, and enter state 10
	'void'         shift, and enter state 11

	Type           goto state 25
	ListType       goto state 61

State 29

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 30

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'function'     reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	%eof           reduce using rule 5


State 31

	Block -> '{' . ListStmt '}'                         (rule 13)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	';'            shift, and enter state 50
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 51
	'continue'     shift, and enter state 52
	'false'        shift, and enter state 53
	'function'     shift, and enter state 8
	'if'           shift, and enter state 54
	'int'          shift, and enter state 9
	'print'        shift, and enter state 55
	'return'       shift, and enter state 56
	'string'       shift, and enter state 10
	'true'         shift, and enter state 57
	'void'         shift, and enter state 11
	'while'        shift, and enter state 58
	'{'            shift, and enter state 31
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 33
	Integer        goto state 34
	String         goto state 35
	Block          goto state 36
	ListStmt       goto state 37
	Stmt           goto state 38
	Type           goto state 39
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 43
	Expr2          goto state 44
	Expr1          goto state 45
	Expr           goto state 46

State 32

	Arg -> Type '&' Ident .                             (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 33

	Stmt -> Ident . '=' Expr ';'                        (rule 19)
	Stmt -> Ident . '++' ';'                            (rule 20)
	Stmt -> Ident . '--' ';'                            (rule 21)
	Expr6 -> Ident .                                    (rule 43)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 47)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            shift, and enter state 94
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	'++'           shift, and enter state 95
	'-'            reduce using rule 43
	'--'           shift, and enter state 96
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            shift, and enter state 97
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 34

	Expr6 -> Integer .                                  (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 35

	Expr6 -> String .                                   (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 36

	Stmt -> Block .                                     (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'false'        reduce using rule 17
	'function'     reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'print'        reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 37

	Block -> '{' ListStmt . '}'                         (rule 13)

	'}'            shift, and enter state 93


State 38

	ListStmt -> Stmt . ListStmt                         (rule 15)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	';'            shift, and enter state 50
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 51
	'continue'     shift, and enter state 52
	'false'        shift, and enter state 53
	'function'     shift, and enter state 8
	'if'           shift, and enter state 54
	'int'          shift, and enter state 9
	'print'        shift, and enter state 55
	'return'       shift, and enter state 56
	'string'       shift, and enter state 10
	'true'         shift, and enter state 57
	'void'         shift, and enter state 11
	'while'        shift, and enter state 58
	'{'            shift, and enter state 31
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 33
	Integer        goto state 34
	String         goto state 35
	Block          goto state 36
	ListStmt       goto state 92
	Stmt           goto state 38
	Type           goto state 39
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 43
	Expr2          goto state 44
	Expr1          goto state 45
	Expr           goto state 46

State 39

	Stmt -> Type . ListItem ';'                         (rule 18)

	L_Ident        shift, and enter state 2

	Ident          goto state 89
	Item           goto state 90
	ListItem       goto state 91

State 40

	Expr5 -> Expr6 .                                    (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52


State 41

	Expr4 -> Expr5 .                                    (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54


State 42

	Expr4 -> Expr4 . MulOp Expr5                        (rule 53)
	Expr3 -> Expr4 .                                    (rule 56)

	'!='           reduce using rule 56
	'%'            shift, and enter state 86
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            shift, and enter state 87
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            shift, and enter state 88
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56

	MulOp          goto state 85

State 43

	Expr3 -> Expr3 . AddOp Expr4                        (rule 55)
	Expr2 -> Expr3 .                                    (rule 58)

	'!='           reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'+'            shift, and enter state 83
	','            reduce using rule 58
	'-'            shift, and enter state 84
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58

	AddOp          goto state 82

State 44

	Expr2 -> Expr2 . RelOp Expr3                        (rule 57)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 59)
	Expr1 -> Expr2 .                                    (rule 60)

	'!='           shift, and enter state 75
	'&&'           shift, and enter state 76
	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60
	'<'            shift, and enter state 77
	'<='           shift, and enter state 78
	'=='           shift, and enter state 79
	'>'            shift, and enter state 80
	'>='           shift, and enter state 81
	'||'           reduce using rule 60

	RelOp          goto state 74

State 45

	Expr -> Expr1 . '||' Expr                           (rule 61)
	Expr -> Expr1 .                                     (rule 62)

	')'            reduce using rule 62
	','            reduce using rule 62
	';'            reduce using rule 62
	'||'           shift, and enter state 73


State 46

	Stmt -> Expr . ';'                                  (rule 27)

	';'            shift, and enter state 72


State 47

	Expr5 -> '!' . Expr6                                (rule 51)

	'('            shift, and enter state 48
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 71

State 48

	Expr6 -> '(' . Expr ')'                             (rule 49)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 43
	Expr2          goto state 44
	Expr1          goto state 45
	Expr           goto state 70

State 49

	Expr5 -> '-' . Expr6                                (rule 50)

	'('            shift, and enter state 48
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 69

State 50

	Stmt -> ';' .                                       (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'false'        reduce using rule 16
	'function'     reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'print'        reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 51

	Stmt -> 'break' .                                   (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'false'        reduce using rule 28
	'function'     reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'print'        reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 52

	Stmt -> 'continue' .                                (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'false'        reduce using rule 29
	'function'     reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'print'        reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 53

	Expr6 -> 'false' .                                  (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 54

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 24)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 25)

	'('            shift, and enter state 68


State 55

	Stmt -> 'print' . '(' Expr ')' ';'                  (rule 30)

	'('            shift, and enter state 67


State 56

	Stmt -> 'return' . Expr ';'                         (rule 22)
	Stmt -> 'return' . ';'                              (rule 23)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	';'            shift, and enter state 66
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 43
	Expr2          goto state 44
	Expr1          goto state 45
	Expr           goto state 65

State 57

	Expr6 -> 'true' .                                   (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 58

	Stmt -> 'while' . '(' Expr ')' Block                (rule 26)

	'('            shift, and enter state 63


State 59

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 60

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 61

	ListType -> Type ',' ListType .                     (rule 42)

	')'            reduce using rule 42


State 62

	Type -> 'function' '<' Type '(' ListType ')' '>' .    (rule 39)

	'&'            reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	','            reduce using rule 39
	L_Ident        reduce using rule 39


State 63

	Stmt -> 'while' '(' . Expr ')' Block                (rule 26)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 43
	Expr2          goto state 44
	Expr1          goto state 45
	Expr           goto state 115

State 64

	Expr6 -> Ident .                                    (rule 43)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 47)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            shift, and enter state 94
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 65

	Stmt -> 'return' Expr . ';'                         (rule 22)

	';'            shift, and enter state 114


State 66

	Stmt -> 'return' ';' .                              (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'function'     reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'print'        reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 67

	Stmt -> 'print' '(' . Expr ')' ';'                  (rule 30)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 43
	Expr2          goto state 44
	Expr1          goto state 45
	Expr           goto state 113

State 68

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 24)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 25)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 43
	Expr2          goto state 44
	Expr1          goto state 45
	Expr           goto state 112

State 69

	Expr5 -> '-' Expr6 .                                (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 70

	Expr6 -> '(' Expr . ')'                             (rule 49)

	')'            shift, and enter state 111


State 71

	Expr5 -> '!' Expr6 .                                (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 72

	Stmt -> Expr ';' .                                  (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'function'     reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'print'        reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 73

	Expr -> Expr1 '||' . Expr                           (rule 61)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 43
	Expr2          goto state 44
	Expr1          goto state 45
	Expr           goto state 110

State 74

	Expr2 -> Expr2 RelOp . Expr3                        (rule 57)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 109

State 75

	RelOp -> '!=' .                                     (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 76

	Expr1 -> Expr2 '&&' . Expr1                         (rule 59)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 43
	Expr2          goto state 44
	Expr1          goto state 108

State 77

	RelOp -> '<' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 78

	RelOp -> '<=' .                                     (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 79

	RelOp -> '==' .                                     (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 80

	RelOp -> '>' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 81

	RelOp -> '>=' .                                     (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 82

	Expr3 -> Expr3 AddOp . Expr4                        (rule 55)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 107

State 83

	AddOp -> '+' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 84

	AddOp -> '-' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 85

	Expr4 -> Expr4 MulOp . Expr5                        (rule 53)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 106

State 86

	MulOp -> '%' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 87

	MulOp -> '*' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 88

	MulOp -> '/' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 89

	Item -> Ident .                                     (rule 31)
	Item -> Ident . '=' Expr                            (rule 32)

	','            reduce using rule 31
	';'            reduce using rule 31
	'='            shift, and enter state 105


State 90

	ListItem -> Item .                                  (rule 33)
	ListItem -> Item . ',' ListItem                     (rule 34)

	','            shift, and enter state 104
	';'            reduce using rule 33


State 91

	Stmt -> Type ListItem . ';'                         (rule 18)

	';'            shift, and enter state 103


State 92

	ListStmt -> Stmt ListStmt .                         (rule 15)

	'}'            reduce using rule 15


State 93

	Block -> '{' ListStmt '}' .                         (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'boolean'      reduce using rule 13
	'break'        reduce using rule 13
	'continue'     reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'function'     reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'print'        reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'void'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 94

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 47)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	')'            reduce using rule 63
	'-'            shift, and enter state 49
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 43
	Expr2          goto state 44
	Expr1          goto state 45
	Expr           goto state 101
	ListExpr       goto state 102

State 95

	Stmt -> Ident '++' . ';'                            (rule 20)

	';'            shift, and enter state 100


State 96

	Stmt -> Ident '--' . ';'                            (rule 21)

	';'            shift, and enter state 99


State 97

	Stmt -> Ident '=' . Expr ';'                        (rule 19)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 43
	Expr2          goto state 44
	Expr1          goto state 45
	Expr           goto state 98

State 98

	Stmt -> Ident '=' Expr . ';'                        (rule 19)

	';'            shift, and enter state 123


State 99

	Stmt -> Ident '--' ';' .                            (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'function'     reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'print'        reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 100

	Stmt -> Ident '++' ';' .                            (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'function'     reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'print'        reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 101

	ListExpr -> Expr .                                  (rule 64)
	ListExpr -> Expr . ',' ListExpr                     (rule 65)

	')'            reduce using rule 64
	','            shift, and enter state 122


State 102

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 47)

	')'            shift, and enter state 121


State 103

	Stmt -> Type ListItem ';' .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'function'     reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'print'        reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 104

	ListItem -> Item ',' . ListItem                     (rule 34)

	L_Ident        shift, and enter state 2

	Ident          goto state 89
	Item           goto state 90
	ListItem       goto state 120

State 105

	Item -> Ident '=' . Expr                            (rule 32)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	'-'            shift, and enter state 49
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 43
	Expr2          goto state 44
	Expr1          goto state 45
	Expr           goto state 119

State 106

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 107

	Expr4 -> Expr4 . MulOp Expr5                        (rule 53)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 55)

	'!='           reduce using rule 55
	'%'            shift, and enter state 86
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            shift, and enter state 87
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            shift, and enter state 88
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55

	MulOp          goto state 85

State 108

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'||'           reduce using rule 59


State 109

	Expr3 -> Expr3 . AddOp Expr4                        (rule 55)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 57)

	'!='           reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'+'            shift, and enter state 83
	','            reduce using rule 57
	'-'            shift, and enter state 84
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57

	AddOp          goto state 82

State 110

	Expr -> Expr1 '||' Expr .                           (rule 61)

	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61


State 111

	Expr6 -> '(' Expr ')' .                             (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 112

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 24)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 25)

	')'            shift, and enter state 118


State 113

	Stmt -> 'print' '(' Expr . ')' ';'                  (rule 30)

	')'            shift, and enter state 117


State 114

	Stmt -> 'return' Expr ';' .                         (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'function'     reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'print'        reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 115

	Stmt -> 'while' '(' Expr . ')' Block                (rule 26)

	')'            shift, and enter state 116


State 116

	Stmt -> 'while' '(' Expr ')' . Block                (rule 26)

	'{'            shift, and enter state 31

	Block          goto state 127

State 117

	Stmt -> 'print' '(' Expr ')' . ';'                  (rule 30)

	';'            shift, and enter state 126


State 118

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 24)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 25)

	'{'            shift, and enter state 31

	Block          goto state 125

State 119

	Item -> Ident '=' Expr .                            (rule 32)

	','            reduce using rule 32
	';'            reduce using rule 32


State 120

	ListItem -> Item ',' ListItem .                     (rule 34)

	';'            reduce using rule 34


State 121

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 122

	ListExpr -> Expr ',' . ListExpr                     (rule 65)

	'!'            shift, and enter state 47
	'('            shift, and enter state 48
	')'            reduce using rule 63
	'-'            shift, and enter state 49
	'false'        shift, and enter state 53
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 64
	Integer        goto state 34
	String         goto state 35
	Expr6          goto state 40
	Expr5          goto state 41
	Expr4          goto state 42
	Expr3          goto state 43
	Expr2          goto state 44
	Expr1          goto state 45
	Expr           goto state 101
	ListExpr       goto state 124

State 123

	Stmt -> Ident '=' Expr ';' .                        (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'function'     reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'print'        reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 124

	ListExpr -> Expr ',' ListExpr .                     (rule 65)

	')'            reduce using rule 65


State 125

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 24)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 25)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'else'         shift, and enter state 128
	'false'        reduce using rule 24
	'function'     reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'print'        reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 126

	Stmt -> 'print' '(' Expr ')' ';' .                  (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'false'        reduce using rule 30
	'function'     reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'print'        reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 127

	Stmt -> 'while' '(' Expr ')' Block .                (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'function'     reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'print'        reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 128

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 25)

	'{'            shift, and enter state 31

	Block          goto state 129

State 129

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'function'     reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'print'        reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 77
Number of terminals: 41
Number of non-terminals: 27
Number of states: 130
