-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Choc/Par.y
-----------------------------------------------------------------------------


rule 39 is unused
rule 40 is unused
rule 41 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg -> Type Ident                                  (8)
	Arg -> Type '&' Ident                              (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	Block -> '{' ListStmt '}'                          (13)
	ListStmt ->                                        (14)
	ListStmt -> Stmt ListStmt                          (15)
	Stmt -> ';'                                        (16)
	Stmt -> Block                                      (17)
	Stmt -> Type ListItem ';'                          (18)
	Stmt -> Ident '=' Expr ';'                         (19)
	Stmt -> Ident '++' ';'                             (20)
	Stmt -> Ident '--' ';'                             (21)
	Stmt -> 'return' Expr ';'                          (22)
	Stmt -> 'return' ';'                               (23)
	Stmt -> 'if' '(' Expr ')' Block                    (24)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (25)
	Stmt -> 'while' '(' Expr ')' Block                 (26)
	Stmt -> Expr ';'                                   (27)
	Stmt -> 'break'                                    (28)
	Stmt -> 'continue'                                 (29)
	Stmt -> 'print' '(' Expr ')' ';'                   (30)
	Item -> Ident                                      (31)
	Item -> Ident '=' Expr                             (32)
	ListItem -> Item                                   (33)
	ListItem -> Item ',' ListItem                      (34)
	Type -> 'int'                                      (35)
	Type -> 'string'                                   (36)
	Type -> 'boolean'                                  (37)
	Type -> 'void'                                     (38)
	ListType ->                                        (39)
	ListType -> Type                                   (40)
	ListType -> Type ',' ListType                      (41)
	Expr6 -> Ident                                     (42)
	Expr6 -> Integer                                   (43)
	Expr6 -> 'true'                                    (44)
	Expr6 -> 'false'                                   (45)
	Expr6 -> Ident '(' ListExpr ')'                    (46)
	Expr6 -> String                                    (47)
	Expr6 -> '(' Expr ')'                              (48)
	Expr5 -> '-' Expr6                                 (49)
	Expr5 -> '!' Expr6                                 (50)
	Expr5 -> Expr6                                     (51)
	Expr4 -> Expr4 MulOp Expr5                         (52)
	Expr4 -> Expr5                                     (53)
	Expr3 -> Expr3 AddOp Expr4                         (54)
	Expr3 -> Expr4                                     (55)
	Expr2 -> Expr2 RelOp Expr3                         (56)
	Expr2 -> Expr3                                     (57)
	Expr1 -> Expr2 '&&' Expr1                          (58)
	Expr1 -> Expr2                                     (59)
	Expr -> Expr1 '||' Expr                            (60)
	Expr -> Expr1                                      (61)
	ListExpr ->                                        (62)
	ListExpr -> Expr                                   (63)
	ListExpr -> Expr ',' ListExpr                      (64)
	AddOp -> '+'                                       (65)
	AddOp -> '-'                                       (66)
	MulOp -> '*'                                       (67)
	MulOp -> '/'                                       (68)
	MulOp -> '%'                                       (69)
	RelOp -> '<'                                       (70)
	RelOp -> '<='                                      (71)
	RelOp -> '>'                                       (72)
	RelOp -> '>='                                      (73)
	RelOp -> '=='                                      (74)
	RelOp -> '!='                                      (75)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'/'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'boolean'      { PT _ (TS _ 22) }
	'break'        { PT _ (TS _ 23) }
	'continue'     { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'if'           { PT _ (TS _ 27) }
	'int'          { PT _ (TS _ 28) }
	'print'        { PT _ (TS _ 29) }
	'return'       { PT _ (TS _ 30) }
	'string'       { PT _ (TS _ 31) }
	'true'         { PT _ (TS _ 32) }
	'void'         { PT _ (TS _ 33) }
	'while'        { PT _ (TS _ 34) }
	'{'            { PT _ (TS _ 35) }
	'||'           { PT _ (TS _ 36) }
	'}'            { PT _ (TS _ 37) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg             rules 8, 9
	ListArg         rules 10, 11, 12
	Block           rule  13
	ListStmt        rules 14, 15
	Stmt            rules 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
	Item            rules 31, 32
	ListItem        rules 33, 34
	Type            rules 35, 36, 37, 38
	ListType        rules 39, 40, 41
	Expr6           rules 42, 43, 44, 45, 46, 47, 48
	Expr5           rules 49, 50, 51
	Expr4           rules 52, 53
	Expr3           rules 54, 55
	Expr2           rules 56, 57
	Expr1           rules 58, 59
	Expr            rules 60, 61
	ListExpr        rules 62, 63, 64
	AddOp           rules 65, 66
	MulOp           rules 67, 68, 69
	RelOp           rules 70, 71, 72, 73, 74, 75

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 12
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 11

State 7

	Type -> 'boolean' .                                 (rule 37)

	'&'            reduce using rule 37
	L_Ident        reduce using rule 37


State 8

	Type -> 'int' .                                     (rule 35)

	'&'            reduce using rule 35
	L_Ident        reduce using rule 35


State 9

	Type -> 'string' .                                  (rule 36)

	'&'            reduce using rule 36
	L_Ident        reduce using rule 36


State 10

	Type -> 'void' .                                    (rule 38)

	'&'            reduce using rule 38
	L_Ident        reduce using rule 38


State 11

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 13


State 12

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 13

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 15
	Type           goto state 16

State 14

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 20


State 15

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 19


State 16

	Arg -> Type . Ident                                 (rule 8)
	Arg -> Type . '&' Ident                             (rule 9)

	'&'            shift, and enter state 18
	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 17

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 18

	Arg -> Type '&' . Ident                             (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 24

State 19

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 23

	Block          goto state 22

State 20

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 21
	Type           goto state 16

State 21

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 22

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	%eof           reduce using rule 5


State 23

	Block -> '{' . ListStmt '}'                         (rule 13)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 42
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 43
	'continue'     shift, and enter state 44
	'false'        shift, and enter state 45
	'if'           shift, and enter state 46
	'int'          shift, and enter state 8
	'print'        shift, and enter state 47
	'return'       shift, and enter state 48
	'string'       shift, and enter state 9
	'true'         shift, and enter state 49
	'void'         shift, and enter state 10
	'while'        shift, and enter state 50
	'{'            shift, and enter state 23
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	ListStmt       goto state 29
	Stmt           goto state 30
	Type           goto state 31
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 38

State 24

	Arg -> Type '&' Ident .                             (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 25

	Stmt -> Ident . '=' Expr ';'                        (rule 19)
	Stmt -> Ident . '++' ';'                            (rule 20)
	Stmt -> Ident . '--' ';'                            (rule 21)
	Expr6 -> Ident .                                    (rule 42)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 46)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	'('            shift, and enter state 84
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	'++'           shift, and enter state 85
	'-'            reduce using rule 42
	'--'           shift, and enter state 86
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            shift, and enter state 87
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 26

	Expr6 -> Integer .                                  (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 27

	Expr6 -> String .                                   (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 28

	Stmt -> Block .                                     (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'print'        reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 29

	Block -> '{' ListStmt . '}'                         (rule 13)

	'}'            shift, and enter state 83


State 30

	ListStmt -> Stmt . ListStmt                         (rule 15)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 42
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 43
	'continue'     shift, and enter state 44
	'false'        shift, and enter state 45
	'if'           shift, and enter state 46
	'int'          shift, and enter state 8
	'print'        shift, and enter state 47
	'return'       shift, and enter state 48
	'string'       shift, and enter state 9
	'true'         shift, and enter state 49
	'void'         shift, and enter state 10
	'while'        shift, and enter state 50
	'{'            shift, and enter state 23
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Block          goto state 28
	ListStmt       goto state 82
	Stmt           goto state 30
	Type           goto state 31
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 38

State 31

	Stmt -> Type . ListItem ';'                         (rule 18)

	L_Ident        shift, and enter state 2

	Ident          goto state 79
	Item           goto state 80
	ListItem       goto state 81

State 32

	Expr5 -> Expr6 .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 33

	Expr4 -> Expr5 .                                    (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 34

	Expr4 -> Expr4 . MulOp Expr5                        (rule 52)
	Expr3 -> Expr4 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            shift, and enter state 76
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            shift, and enter state 77
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            shift, and enter state 78
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55

	MulOp          goto state 75

State 35

	Expr3 -> Expr3 . AddOp Expr4                        (rule 54)
	Expr2 -> Expr3 .                                    (rule 57)

	'!='           reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'+'            shift, and enter state 73
	','            reduce using rule 57
	'-'            shift, and enter state 74
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57

	AddOp          goto state 72

State 36

	Expr2 -> Expr2 . RelOp Expr3                        (rule 56)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 58)
	Expr1 -> Expr2 .                                    (rule 59)

	'!='           shift, and enter state 65
	'&&'           shift, and enter state 66
	')'            reduce using rule 59
	','            reduce using rule 59
	';'            reduce using rule 59
	'<'            shift, and enter state 67
	'<='           shift, and enter state 68
	'=='           shift, and enter state 69
	'>'            shift, and enter state 70
	'>='           shift, and enter state 71
	'||'           reduce using rule 59

	RelOp          goto state 64

State 37

	Expr -> Expr1 . '||' Expr                           (rule 60)
	Expr -> Expr1 .                                     (rule 61)

	')'            reduce using rule 61
	','            reduce using rule 61
	';'            reduce using rule 61
	'||'           shift, and enter state 63


State 38

	Stmt -> Expr . ';'                                  (rule 27)

	';'            shift, and enter state 62


State 39

	Expr5 -> '!' . Expr6                                (rule 50)

	'('            shift, and enter state 40
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 61

State 40

	Expr6 -> '(' . Expr ')'                             (rule 48)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 60

State 41

	Expr5 -> '-' . Expr6                                (rule 49)

	'('            shift, and enter state 40
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 59

State 42

	Stmt -> ';' .                                       (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'false'        reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'print'        reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 43

	Stmt -> 'break' .                                   (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'false'        reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'print'        reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 44

	Stmt -> 'continue' .                                (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'print'        reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 45

	Expr6 -> 'false' .                                  (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 46

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 24)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 25)

	'('            shift, and enter state 58


State 47

	Stmt -> 'print' . '(' Expr ')' ';'                  (rule 30)

	'('            shift, and enter state 57


State 48

	Stmt -> 'return' . Expr ';'                         (rule 22)
	Stmt -> 'return' . ';'                              (rule 23)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	';'            shift, and enter state 56
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 55

State 49

	Expr6 -> 'true' .                                   (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 50

	Stmt -> 'while' . '(' Expr ')' Block                (rule 26)

	'('            shift, and enter state 53


State 51

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 52

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 53

	Stmt -> 'while' '(' . Expr ')' Block                (rule 26)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 105

State 54

	Expr6 -> Ident .                                    (rule 42)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 46)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	'('            shift, and enter state 84
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 55

	Stmt -> 'return' Expr . ';'                         (rule 22)

	';'            shift, and enter state 104


State 56

	Stmt -> 'return' ';' .                              (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'print'        reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 57

	Stmt -> 'print' '(' . Expr ')' ';'                  (rule 30)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 103

State 58

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 24)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 25)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 102

State 59

	Expr5 -> '-' Expr6 .                                (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 60

	Expr6 -> '(' Expr . ')'                             (rule 48)

	')'            shift, and enter state 101


State 61

	Expr5 -> '!' Expr6 .                                (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 62

	Stmt -> Expr ';' .                                  (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'print'        reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 63

	Expr -> Expr1 '||' . Expr                           (rule 60)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 100

State 64

	Expr2 -> Expr2 RelOp . Expr3                        (rule 56)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 99

State 65

	RelOp -> '!=' .                                     (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 66

	Expr1 -> Expr2 '&&' . Expr1                         (rule 58)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 98

State 67

	RelOp -> '<' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 68

	RelOp -> '<=' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 69

	RelOp -> '==' .                                     (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 70

	RelOp -> '>' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 71

	RelOp -> '>=' .                                     (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 72

	Expr3 -> Expr3 AddOp . Expr4                        (rule 54)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 97

State 73

	AddOp -> '+' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 74

	AddOp -> '-' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 75

	Expr4 -> Expr4 MulOp . Expr5                        (rule 52)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 96

State 76

	MulOp -> '%' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 77

	MulOp -> '*' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 78

	MulOp -> '/' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 79

	Item -> Ident .                                     (rule 31)
	Item -> Ident . '=' Expr                            (rule 32)

	','            reduce using rule 31
	';'            reduce using rule 31
	'='            shift, and enter state 95


State 80

	ListItem -> Item .                                  (rule 33)
	ListItem -> Item . ',' ListItem                     (rule 34)

	','            shift, and enter state 94
	';'            reduce using rule 33


State 81

	Stmt -> Type ListItem . ';'                         (rule 18)

	';'            shift, and enter state 93


State 82

	ListStmt -> Stmt ListStmt .                         (rule 15)

	'}'            reduce using rule 15


State 83

	Block -> '{' ListStmt '}' .                         (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'boolean'      reduce using rule 13
	'break'        reduce using rule 13
	'continue'     reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'print'        reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'void'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 84

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 46)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	')'            reduce using rule 62
	'-'            shift, and enter state 41
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 91
	ListExpr       goto state 92

State 85

	Stmt -> Ident '++' . ';'                            (rule 20)

	';'            shift, and enter state 90


State 86

	Stmt -> Ident '--' . ';'                            (rule 21)

	';'            shift, and enter state 89


State 87

	Stmt -> Ident '=' . Expr ';'                        (rule 19)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 88

State 88

	Stmt -> Ident '=' Expr . ';'                        (rule 19)

	';'            shift, and enter state 113


State 89

	Stmt -> Ident '--' ';' .                            (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'print'        reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 90

	Stmt -> Ident '++' ';' .                            (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'print'        reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 91

	ListExpr -> Expr .                                  (rule 63)
	ListExpr -> Expr . ',' ListExpr                     (rule 64)

	')'            reduce using rule 63
	','            shift, and enter state 112


State 92

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 46)

	')'            shift, and enter state 111


State 93

	Stmt -> Type ListItem ';' .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'print'        reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 94

	ListItem -> Item ',' . ListItem                     (rule 34)

	L_Ident        shift, and enter state 2

	Ident          goto state 79
	Item           goto state 80
	ListItem       goto state 110

State 95

	Item -> Ident '=' . Expr                            (rule 32)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	'-'            shift, and enter state 41
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 109

State 96

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52


State 97

	Expr4 -> Expr4 . MulOp Expr5                        (rule 52)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 54)

	'!='           reduce using rule 54
	'%'            shift, and enter state 76
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            shift, and enter state 77
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            shift, and enter state 78
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54

	MulOp          goto state 75

State 98

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	'||'           reduce using rule 58


State 99

	Expr3 -> Expr3 . AddOp Expr4                        (rule 54)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 56)

	'!='           reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'+'            shift, and enter state 73
	','            reduce using rule 56
	'-'            shift, and enter state 74
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56

	AddOp          goto state 72

State 100

	Expr -> Expr1 '||' Expr .                           (rule 60)

	')'            reduce using rule 60
	','            reduce using rule 60
	';'            reduce using rule 60


State 101

	Expr6 -> '(' Expr ')' .                             (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 102

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 24)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 25)

	')'            shift, and enter state 108


State 103

	Stmt -> 'print' '(' Expr . ')' ';'                  (rule 30)

	')'            shift, and enter state 107


State 104

	Stmt -> 'return' Expr ';' .                         (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'print'        reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 105

	Stmt -> 'while' '(' Expr . ')' Block                (rule 26)

	')'            shift, and enter state 106


State 106

	Stmt -> 'while' '(' Expr ')' . Block                (rule 26)

	'{'            shift, and enter state 23

	Block          goto state 117

State 107

	Stmt -> 'print' '(' Expr ')' . ';'                  (rule 30)

	';'            shift, and enter state 116


State 108

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 24)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 25)

	'{'            shift, and enter state 23

	Block          goto state 115

State 109

	Item -> Ident '=' Expr .                            (rule 32)

	','            reduce using rule 32
	';'            reduce using rule 32


State 110

	ListItem -> Item ',' ListItem .                     (rule 34)

	';'            reduce using rule 34


State 111

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 112

	ListExpr -> Expr ',' . ListExpr                     (rule 64)

	'!'            shift, and enter state 39
	'('            shift, and enter state 40
	')'            reduce using rule 62
	'-'            shift, and enter state 41
	'false'        shift, and enter state 45
	'true'         shift, and enter state 49
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 51
	L_quoted       shift, and enter state 52

	Ident          goto state 54
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 32
	Expr5          goto state 33
	Expr4          goto state 34
	Expr3          goto state 35
	Expr2          goto state 36
	Expr1          goto state 37
	Expr           goto state 91
	ListExpr       goto state 114

State 113

	Stmt -> Ident '=' Expr ';' .                        (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'print'        reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 114

	ListExpr -> Expr ',' ListExpr .                     (rule 64)

	')'            reduce using rule 64


State 115

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 24)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 25)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'else'         shift, and enter state 118
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'print'        reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 116

	Stmt -> 'print' '(' Expr ')' ';' .                  (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'false'        reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'print'        reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 117

	Stmt -> 'while' '(' Expr ')' Block .                (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'print'        reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 118

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 25)

	'{'            shift, and enter state 23

	Block          goto state 119

State 119

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'print'        reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 76
Number of terminals: 40
Number of non-terminals: 27
Number of states: 120
