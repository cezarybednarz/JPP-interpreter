# Makefile generated by BNFC.

GHC        = ghc
HAPPY      = happy
HAPPY_OPTS = --array --info --ghc --coerce
ALEX       = alex
ALEX_OPTS  = --ghc

# List of goals not corresponding to file names.

.PHONY : all clean distclean

# Default goal.

all : TestChococino

# Rules for building the parser.

AbsChococino.hs LexChococino.x ParChococino.y PrintChococino.hs TestChococino.hs : Chococino.cf
	bnfc --haskell --functor Chococino.cf

%.hs : %.y
	${HAPPY} ${HAPPY_OPTS} $<

%.hs : %.x
	${ALEX} ${ALEX_OPTS} $<

TestChococino : AbsChococino.hs LexChococino.hs ParChococino.hs PrintChococino.hs TestChococino.hs
	${GHC} ${GHC_OPTS} $@

# Rules for cleaning generated files.

clean :
	-rm -f *.hi *.o *.log *.aux *.dvi

distclean : clean
	-rm -f AbsChococino.hs AbsChococino.hs.bak ComposOp.hs ComposOp.hs.bak DocChococino.txt DocChococino.txt.bak ErrM.hs ErrM.hs.bak LayoutChococino.hs LayoutChococino.hs.bak LexChococino.x LexChococino.x.bak ParChococino.y ParChococino.y.bak PrintChococino.hs PrintChococino.hs.bak SkelChococino.hs SkelChococino.hs.bak TestChococino.hs TestChococino.hs.bak XMLChococino.hs XMLChococino.hs.bak ASTChococino.agda ASTChococino.agda.bak ParserChococino.agda ParserChococino.agda.bak IOLib.agda IOLib.agda.bak Main.agda Main.agda.bak Chococino.dtd Chococino.dtd.bak TestChococino LexChococino.hs ParChococino.hs ParChococino.info ParDataChococino.hs Makefile


# EOF
